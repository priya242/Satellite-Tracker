{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/my-app/src/App.js\";\nimport React from \"react\";\nimport \"./css/style.css\";\nimport Chart from \"./components/Chart\";\nimport WorldMap from \"./components/WorldMap\";\nimport NEvents from \"./components/NEvents\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nasa: [],\n      Data: [],\n      SatCat: [],\n      isLoaded: false\n    };\n  } //   fetchData() {\n  //     const url =\n  //       \"https://images-api.nasa.gov/asset/ISS%204K%20Crew%20Earth%20Observations\";\n  //     const urls = this.loadSat();\n  //     // const url1 = 'https://www.space-track.org/basicspacedata/query/class/boxscore/format/html'\n  //     //--------------------fetching url-------------------\n  //     fetch(url)\n  //       .then((response) => response.json())\n  //       .then((data) => {\n  //         return data;\n  //       })\n  //       .then((data) => {\n  //         this.setState({\n  //           nasa: data.collection.items[1].href,\n  //           isLoaded: true,\n  //         });\n  //       });\n  //--------------------fetching url1-------------------\n  //--------------------fetching urls----------------------------\n  // Promise.all(urls.map((url) => fetch(url)))\n  //   .then((responses) => Promise.all(responses.map((r) => r.json())))\n  //   .then((values) => {\n  //     return values;\n  //   })\n  //   .then((data) => {\n  //     this.setState({\n  //       isLoaded: true,\n  //       Data: data,\n  //     });\n  //   });\n  // .catch((error) = console.log(error));\n  //}\n  //   componentDidMount() {\n  //     // this.fetchData();\n  //   }\n\n\n  loadSat() {\n    let urls = [];\n\n    for (let id = 2; id <= 13; id++) {\n      let url1 = \"https://www.n2yo.com/rest/v1/satellite/above/41.702/-76.014/0/70/\" + id + \"/&apiKey=TY7W6H-2YWZWQ-9W9WEL-4FIH\";\n      urls.push(url1);\n    }\n\n    return urls; //console.log(urls)\n  } //------------------render snd return--------------------\n\n\n  render() {\n    //const { nasa, satellites, category, isLoaded } = this.state;\n    const {\n      nasa,\n      Data,\n      isLoaded\n    } = this.state; // console.log(Data)\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"navbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"Sattelite Tracker\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav-controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \"Satellite Info\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, \"Natural Events\")))), /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, !isLoaded && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, \"Loading...\"), /*#__PURE__*/React.createElement(\"video\", {\n      autoPlay: true,\n      controls: true,\n      muted: true,\n      loop: true,\n      src: nasa,\n      type: \"video/mp4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Chart, {\n      DataSet: Data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(NEvents, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/my-app/src/App.js"],"names":["React","Chart","WorldMap","NEvents","App","Component","constructor","props","state","nasa","Data","SatCat","isLoaded","loadSat","urls","id","url1","push","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,IAAI,EAAE,EAFK;AAGXC,MAAAA,MAAM,EAAE,EAHG;AAIXC,MAAAA,QAAQ,EAAE;AAJC,KAAb;AAMD,GAT+B,CAUhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;AAEAC,EAAAA,OAAO,GAAG;AACR,QAAIC,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,IAAI,EAAvB,EAA2BA,EAAE,EAA7B,EAAiC;AAC/B,UAAIC,IAAI,GACN,sEACAD,EADA,GAEA,oCAHF;AAIAD,MAAAA,IAAI,CAACG,IAAL,CAAUD,IAAV;AACD;;AACD,WAAOF,IAAP,CATQ,CAUR;AACD,GA5D+B,CA6DhC;;;AACAI,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAET,MAAAA,IAAF;AAAQC,MAAAA,IAAR;AAAcE,MAAAA;AAAd,QAA2B,KAAKJ,KAAtC,CAFO,CAGP;;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAG,MAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAFF,CAJF,CADF,eAYE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,CAACI,QAAD,iBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFhB,eAGE;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,QAAQ,MAAxB;AAAyB,MAAA,KAAK,MAA9B;AAA+B,MAAA,IAAI,MAAnC;AAAoC,MAAA,GAAG,EAAEH,IAAzC;AAA+C,MAAA,IAAI,EAAC,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAEC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAZF,eAkBE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,CADF;AAsBD;;AAxF+B;;AA2FlC,eAAeN,GAAf","sourcesContent":["import React from \"react\";\nimport \"./css/style.css\";\nimport Chart from \"./components/Chart\";\nimport WorldMap from \"./components/WorldMap\";\nimport NEvents from \"./components/NEvents\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nasa: [],\n      Data: [],\n      SatCat: [],\n      isLoaded: false,\n    };\n  }\n  //   fetchData() {\n  //     const url =\n  //       \"https://images-api.nasa.gov/asset/ISS%204K%20Crew%20Earth%20Observations\";\n  //     const urls = this.loadSat();\n  //     // const url1 = 'https://www.space-track.org/basicspacedata/query/class/boxscore/format/html'\n  //     //--------------------fetching url-------------------\n  //     fetch(url)\n  //       .then((response) => response.json())\n  //       .then((data) => {\n  //         return data;\n  //       })\n  //       .then((data) => {\n  //         this.setState({\n  //           nasa: data.collection.items[1].href,\n  //           isLoaded: true,\n  //         });\n  //       });\n  //--------------------fetching url1-------------------\n\n  //--------------------fetching urls----------------------------\n  // Promise.all(urls.map((url) => fetch(url)))\n  //   .then((responses) => Promise.all(responses.map((r) => r.json())))\n  //   .then((values) => {\n  //     return values;\n  //   })\n  //   .then((data) => {\n  //     this.setState({\n  //       isLoaded: true,\n  //       Data: data,\n  //     });\n  //   });\n\n  // .catch((error) = console.log(error));\n  //}\n\n  //   componentDidMount() {\n  //     // this.fetchData();\n  //   }\n\n  loadSat() {\n    let urls = [];\n    for (let id = 2; id <= 13; id++) {\n      let url1 =\n        \"https://www.n2yo.com/rest/v1/satellite/above/41.702/-76.014/0/70/\" +\n        id +\n        \"/&apiKey=TY7W6H-2YWZWQ-9W9WEL-4FIH\";\n      urls.push(url1);\n    }\n    return urls;\n    //console.log(urls)\n  }\n  //------------------render snd return--------------------\n  render() {\n    //const { nasa, satellites, category, isLoaded } = this.state;\n    const { nasa, Data, isLoaded } = this.state;\n    // console.log(Data)\n    return (\n      <div>\n        <div className=\"navbar\">\n          <span>\n            <b>Sattelite Tracker</b>\n          </span>\n          <div className=\"nav-controls\">\n            <div>Satellite Info</div>\n            <a href=\"/\">\n              <div>Natural Events</div>\n            </a>\n          </div>\n        </div>\n        <React.Fragment>\n          {/* <h1>Satellite Tracker</h1> */}\n          {!isLoaded && <p>Loading...</p>}\n          <video autoPlay controls muted loop src={nasa} type=\"video/mp4\" />\n          <Chart DataSet={Data} />\n        </React.Fragment>\n        <NEvents />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}