{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/my-app/src/App.js\";\nimport React from \"react\";\nimport \"./style.css\"; //import { render } from \"react-dom\";\n//import Header from \"./components/Header\"\n//import Main from \"./components/Main\"\n//import Footer  from \"./components/Footer\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nasa: [],\n      //urls: [],\n      //satellites: [],\n      //category: [],\n      htmlData: [],\n      isLoaded: false\n    };\n  }\n\n  fetchData() {\n    const url = \"https://images-api.nasa.gov/asset/ISS%204K%20Crew%20Earth%20Observations\";\n    const urls = this.loadSat();\n    fetch(url).then(response => response.json()).then(data => {\n      return data;\n    }).then(data => {\n      this.setState({\n        nasa: data.collection.items[1].href,\n        isLoaded: true\n      });\n    });\n    Promise.all(urls.map(url => fetch(url))).then(responses => Promise.all(responses.map(r => r.json()))).then(values => {\n      return values;\n    }).then(data => {\n      this.setState({\n        //satellites: data.satcount,\n        //category: data.category,\n        isLoaded: true,\n        htmlData: data\n      });\n    }); // .catch((error) = console.log(error));\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  loadSat() {\n    let urls = [];\n\n    for (let id = 1; id <= 10; id++) {\n      let url1 = \"https://www.n2yo.com/rest/v1/satellite/above/41.702/-76.014/0/70/\" + id + \"/&apiKey=TY7W6H-2YWZWQ-9W9WEL-4FIH\";\n      urls.push(url1);\n    }\n\n    return urls; //console.log(urls)\n  } //data = {category:count}\n  //const url1 = 'https://uphere-space1.p.rapidapi.com/satellite/list?country=IND&page=1';\n\n\n  render() {\n    //const { nasa, satellites, category, isLoaded } = this.state;\n    const {\n      nasa,\n      htmlData,\n      isLoaded\n    } = this.state;\n    var categoryDiv = \"\";\n    var satelliteCountDiv = \"\";\n\n    for (var i = 0; i < htmlData.length; i++) {\n      console.log(\"This is my second iteration under render: \" + htmlData[i].info);\n      categoryDiv = categoryDiv + \"<div>\" + htmlData[i].info.category + \"</div>\";\n      satelliteCountDiv = satelliteCountDiv + \"<div>\" + htmlData[i].info.satcount + \"</div>\";\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, \"Satellite Tracker\"), !isLoaded && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 23\n      }\n    }, \"Loading...\"), /*#__PURE__*/React.createElement(\"video\", {\n      autoPlay: true,\n      controls: true,\n      muted: true,\n      loop: true,\n      src: nasa,\n      type: \"video/mp4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, categoryDiv), \"return\", /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 3\n      }\n    }, satelliteCountDiv));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/my-app/src/App.js"],"names":["React","App","Component","constructor","props","state","nasa","htmlData","isLoaded","fetchData","url","urls","loadSat","fetch","then","response","json","data","setState","collection","items","href","Promise","all","map","responses","r","values","componentDidMount","id","url1","push","render","categoryDiv","satelliteCountDiv","i","length","console","log","info","category","satcount"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n//import { render } from \"react-dom\";\n//import Header from \"./components/Header\"\n//import Main from \"./components/Main\"\n//import Footer  from \"./components/Footer\"\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nasa: [],\n      //urls: [],\n      //satellites: [],\n      //category: [],\n      htmlData: [],\n      isLoaded: false,\n    };\n  }\n  fetchData() {\n    const url =\n      \"https://images-api.nasa.gov/asset/ISS%204K%20Crew%20Earth%20Observations\";\n    const urls = this.loadSat();\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        return data;\n      })\n      .then((data) => {\n        this.setState({\n          nasa: data.collection.items[1].href,\n          isLoaded: true,\n        });\n      });\n      \n    Promise.all(\n      urls.map((url) => fetch(url)))\n          .then((responses) => Promise.all(responses.map(r => r.json()) ))\n          .then((values) => {\n            return values;\n           \n          })\n          .then((data) => {         \n            this.setState({\n              //satellites: data.satcount,\n              //category: data.category,\n              isLoaded: true,\n              htmlData: data\n            });\n          })\n\n    // .catch((error) = console.log(error));\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  loadSat() {\n    let urls = [];\n    for (let id = 1; id <= 10; id++) {\n      let url1 =\n        \"https://www.n2yo.com/rest/v1/satellite/above/41.702/-76.014/0/70/\" +\n        id +\n        \"/&apiKey=TY7W6H-2YWZWQ-9W9WEL-4FIH\";\n      urls.push(url1);\n    }\n    return urls;\n    //console.log(urls)\n  }\n  //data = {category:count}\n  //const url1 = 'https://uphere-space1.p.rapidapi.com/satellite/list?country=IND&page=1';\n\n  render() {\n    //const { nasa, satellites, category, isLoaded } = this.state;\n    const { nasa, htmlData, isLoaded } = this.state\n    var categoryDiv = \"\";\n    var satelliteCountDiv = \"\";\n    for(var i = 0; i < htmlData.length ; i++){\n      console.log(\"This is my second iteration under render: \" + htmlData[i].info);\n      categoryDiv = categoryDiv + \"<div>\" + htmlData[i].info.category + \"</div>\"\n      satelliteCountDiv = satelliteCountDiv + \"<div>\" + htmlData[i].info.satcount + \"</div>\"\n   }\n\n    return (\n      <React.Fragment>\n        <h1>Satellite Tracker</h1>\n        {!isLoaded && <p>Loading...</p>}\n        <video autoPlay controls muted loop src={nasa} type=\"video/mp4\" />\n        \n          <div>\n              {categoryDiv}\n          </div> \n        \n       return   \n  <div>\n      {satelliteCountDiv}\n        </div>\n        \n        </React.Fragment>\n          \n        )}\n\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}