{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/my-app/src/components/nevents/NEeach.js\";\nimport React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nclass NEeach extends React.Component {\n  render() {\n    // console.log(\"inside neach\");\n    // console.log(this.props);\n    let event = this.props.event[0];\n    let count = this.props.event[1];\n    let total = this.props.total;\n    const state = {\n      labels: [event, \"\"],\n      datasets: [{\n        backgroundColor: [\"#B21F00\", \"\"],\n        hoverBackgroundColor: [\"#501800\", \"\"],\n        hoverBorderColor: [\"#501800\", \"\"],\n        hoverBorderWidth: 1,\n        borderWidth: 0,\n        data: [count, total - count]\n      }]\n    };\n    const options = {\n      cutoutPercentage: 80\n    }; //Plugin for text in the middle : https://jsfiddle.net/cmyker/ooxdL2vj/\n\n    const plugin = [{\n      beforeDraw: function (chart) {\n        var width = chart.chart.width,\n            height = chart.chart.height,\n            ctx = chart.chart.ctx;\n        ctx.restore();\n        var fontSize = (height / 114).toFixed(2);\n        ctx.font = fontSize + \"em sans-serif\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillStyle = \"#B21F00\";\n        var text = (count / total * 100).toFixed(2).toString() + \"%\",\n            textX = Math.round((width - ctx.measureText(text).width) / 2),\n            textY = height / 2;\n        ctx.fillText(text, textX, textY);\n        ctx.save();\n      }\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Doughnut, {\n      data: state,\n      options: options,\n      plugins: plugin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default NEeach;","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/my-app/src/components/nevents/NEeach.js"],"names":["React","Doughnut","NEeach","Component","render","event","props","count","total","state","labels","datasets","backgroundColor","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","borderWidth","data","options","cutoutPercentage","plugin","beforeDraw","chart","width","height","ctx","restore","fontSize","toFixed","font","textBaseline","fillStyle","text","toString","textX","Math","round","measureText","textY","fillText","save"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AACnCC,EAAAA,MAAM,GAAG;AACP;AACA;AACA,QAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAX,CAAiB,CAAjB,CAAZ;AACA,QAAIE,KAAK,GAAG,KAAKD,KAAL,CAAWD,KAAX,CAAiB,CAAjB,CAAZ;AACA,QAAIG,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAvB;AACA,UAAMC,KAAK,GAAG;AACZC,MAAAA,MAAM,EAAE,CAACL,KAAD,EAAQ,EAAR,CADI;AAEZM,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,eAAe,EAAE,CAAC,SAAD,EAAY,EAAZ,CADnB;AAEEC,QAAAA,oBAAoB,EAAE,CAAC,SAAD,EAAY,EAAZ,CAFxB;AAGEC,QAAAA,gBAAgB,EAAE,CAAC,SAAD,EAAY,EAAZ,CAHpB;AAIEC,QAAAA,gBAAgB,EAAE,CAJpB;AAKEC,QAAAA,WAAW,EAAE,CALf;AAMEC,QAAAA,IAAI,EAAE,CAACV,KAAD,EAAQC,KAAK,GAAGD,KAAhB;AANR,OADQ;AAFE,KAAd;AAcA,UAAMW,OAAO,GAAG;AACdC,MAAAA,gBAAgB,EAAE;AADJ,KAAhB,CApBO,CAwBP;;AACA,UAAMC,MAAM,GAAG,CACb;AACEC,MAAAA,UAAU,EAAE,UAAUC,KAAV,EAAiB;AAC3B,YAAIC,KAAK,GAAGD,KAAK,CAACA,KAAN,CAAYC,KAAxB;AAAA,YACEC,MAAM,GAAGF,KAAK,CAACA,KAAN,CAAYE,MADvB;AAAA,YAEEC,GAAG,GAAGH,KAAK,CAACA,KAAN,CAAYG,GAFpB;AAIAA,QAAAA,GAAG,CAACC,OAAJ;AACA,YAAIC,QAAQ,GAAG,CAACH,MAAM,GAAG,GAAV,EAAeI,OAAf,CAAuB,CAAvB,CAAf;AACAH,QAAAA,GAAG,CAACI,IAAJ,GAAWF,QAAQ,GAAG,eAAtB;AACAF,QAAAA,GAAG,CAACK,YAAJ,GAAmB,QAAnB;AACAL,QAAAA,GAAG,CAACM,SAAJ,GAAgB,SAAhB;AAEA,YAAIC,IAAI,GAAG,CAAEzB,KAAK,GAAGC,KAAT,GAAkB,GAAnB,EAAwBoB,OAAxB,CAAgC,CAAhC,EAAmCK,QAAnC,KAAgD,GAA3D;AAAA,YACEC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACb,KAAK,GAAGE,GAAG,CAACY,WAAJ,CAAgBL,IAAhB,EAAsBT,KAA/B,IAAwC,CAAnD,CADV;AAAA,YAEEe,KAAK,GAAGd,MAAM,GAAG,CAFnB;AAIAC,QAAAA,GAAG,CAACc,QAAJ,CAAaP,IAAb,EAAmBE,KAAnB,EAA0BI,KAA1B;AACAb,QAAAA,GAAG,CAACe,IAAJ;AACD;AAlBH,KADa,CAAf;AAuBA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE/B,KAAhB;AAAuB,MAAA,OAAO,EAAES,OAAhC;AAAyC,MAAA,OAAO,EAAEE,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAtDkC;;AAwDrC,eAAelB,MAAf","sourcesContent":["import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nclass NEeach extends React.Component {\n  render() {\n    // console.log(\"inside neach\");\n    // console.log(this.props);\n    let event = this.props.event[0];\n    let count = this.props.event[1];\n    let total = this.props.total;\n    const state = {\n      labels: [event, \"\"],\n      datasets: [\n        {\n          backgroundColor: [\"#B21F00\", \"\"],\n          hoverBackgroundColor: [\"#501800\", \"\"],\n          hoverBorderColor: [\"#501800\", \"\"],\n          hoverBorderWidth: 1,\n          borderWidth: 0,\n          data: [count, total - count],\n        },\n      ],\n    };\n\n    const options = {\n      cutoutPercentage: 80,\n    };\n\n    //Plugin for text in the middle : https://jsfiddle.net/cmyker/ooxdL2vj/\n    const plugin = [\n      {\n        beforeDraw: function (chart) {\n          var width = chart.chart.width,\n            height = chart.chart.height,\n            ctx = chart.chart.ctx;\n\n          ctx.restore();\n          var fontSize = (height / 114).toFixed(2);\n          ctx.font = fontSize + \"em sans-serif\";\n          ctx.textBaseline = \"middle\";\n          ctx.fillStyle = \"#B21F00\";\n\n          var text = ((count / total) * 100).toFixed(2).toString() + \"%\",\n            textX = Math.round((width - ctx.measureText(text).width) / 2),\n            textY = height / 2;\n\n          ctx.fillText(text, textX, textY);\n          ctx.save();\n        },\n      },\n    ];\n\n    return (\n      <div>\n        <Doughnut data={state} options={options} plugins={plugin} />\n      </div>\n    );\n  }\n}\nexport default NEeach;\n"]},"metadata":{},"sourceType":"module"}