{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/src/components/SatInfo.js\";\nimport React from \"react\";\nimport Chart from \"./satinfo/Chart\";\nimport BarData from \"./satinfo/BarData\";\nimport WorldMap from \"./satinfo/WorldMap\";\nimport Apod from \"./satinfo/Apod\";\n\nclass SatInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nasa: [],\n      Data: [],\n      SatCat: [],\n      launchDate: [],\n      apodData: [],\n      isLoaded: false\n    };\n  }\n\n  fetchData() {\n    const url = \"https://images-api.nasa.gov/asset/ISS%204K%20Crew%20Earth%20Observations\";\n    const urls = this.loadSat();\n    const url1 = \"https://www.n2yo.com/rest/v1/satellite/above/41.702/-76.014/0/90/0/&apiKey=TY7W6H-2YWZWQ-9W9WEL-4FIH\";\n    const url2 = \"https://api.nasa.gov/planetary/apod?api_key=TY7W6H-2YWZWQ-9W9WEL-4FIH\"; //--------------------------------------fetching url-------------------------------------------------\n\n    fetch(url).then(response => response.json()).then(data => {\n      return data;\n    }).then(data => {\n      this.setState({\n        nasa: data.collection.items[1].href\n      });\n    }); //---------------------------------------fetching url1-------------------\n\n    fetch(url1).then(response => response.json()).then(data => {\n      return data; //console.log(data);\n    }).then(data => {\n      this.setState({\n        launchDate: data.above\n      });\n    }); //---------------------------------------fetching urls----------------------------\n\n    Promise.all(urls.map(url => fetch(url))).then(responses => Promise.all(responses.map(r => r.json()))).then(data => {\n      return data; // console.log(data)\n    }).then(data => {\n      this.setState({\n        isLoaded: true,\n        Data: data\n      });\n    }); //--------------------------------------fetching url2------------------------------\n\n    fetch(url2).then(response => response.json()).then(data => {\n      return data;\n    }).then(data => {\n      this.setState({\n        apodData: data\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  loadSat() {\n    let urls = [];\n\n    for (let id = 2; id <= 53; id++) {\n      let url1 = \"https://www.n2yo.com/rest/v1/satellite/above/41.702/-76.014/0/90/\" + id + \"/&apiKey=TY7W6H-2YWZWQ-9W9WEL-4FIH\";\n      urls.push(url1);\n    }\n\n    return urls;\n  } //--------------------------------------render and return--------------------------------\n\n\n  render() {\n    const {\n      nasa,\n      Data,\n      launchDate,\n      apodData\n    } = this.state; //console.log(launchDate)\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"satinfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, \"Total Satellites : \", launchDate.length), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"satinfo_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      autoPlay: true,\n      controls: true,\n      muted: true,\n      loop: true,\n      src: nasa,\n      type: \"video/mp4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Chart, {\n      DataSet: Data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(BarData, {\n      DataSets: launchDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(WorldMap, {\n      WorldDataSet: launchDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default SatInfo;","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/src/components/SatInfo.js"],"names":["React","Chart","BarData","WorldMap","Apod","SatInfo","Component","constructor","props","state","nasa","Data","SatCat","launchDate","apodData","isLoaded","fetchData","url","urls","loadSat","url1","url2","fetch","then","response","json","data","setState","collection","items","href","above","Promise","all","map","responses","r","componentDidMount","id","push","render","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Chart from \"./satinfo/Chart\";\nimport BarData from \"./satinfo/BarData\";\nimport WorldMap from \"./satinfo/WorldMap\";\nimport Apod from  \"./satinfo/Apod\";\nclass SatInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nasa: [],\n      Data: [],\n      SatCat: [],\n      launchDate: [],\n      apodData:[],\n      isLoaded: false,\n    };\n  }\n  fetchData() {\n    const url =\n      \"https://images-api.nasa.gov/asset/ISS%204K%20Crew%20Earth%20Observations\";\n    const urls = this.loadSat();\n\n    const url1 =\n      \"https://www.n2yo.com/rest/v1/satellite/above/41.702/-76.014/0/90/0/&apiKey=TY7W6H-2YWZWQ-9W9WEL-4FIH\";\n    const url2 =\n      \"https://api.nasa.gov/planetary/apod?api_key=TY7W6H-2YWZWQ-9W9WEL-4FIH\";\n    //--------------------------------------fetching url-------------------------------------------------\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        return data;\n      })\n      .then((data) => {\n        this.setState({\n          nasa: data.collection.items[1].href,\n        });\n      });\n    //---------------------------------------fetching url1-------------------\n    fetch(url1)\n      .then((response) => response.json())\n      .then((data) => {\n        return data;\n        //console.log(data);\n      })\n      .then((data) => {\n        this.setState({\n          launchDate: data.above,\n        });\n      });\n    //---------------------------------------fetching urls----------------------------\n    Promise.all(urls.map((url) => fetch(url)))\n      .then((responses) => Promise.all(responses.map((r) => r.json())))\n      .then((data) => {\n        return data;\n        // console.log(data)\n      })\n      .then((data) => {\n        this.setState({\n          isLoaded: true,\n          Data: data,\n        });\n      });\n\n    //--------------------------------------fetching url2------------------------------\n    fetch(url2)\n      .then((response) => response.json())\n      .then((data) => {\n        return data;\n      })\n      .then((data) => {\n        this.setState({\n          apodData:data\n        });\n      });\n  }\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  loadSat() {\n    let urls = [];\n    for (let id = 2; id <= 53; id++) {\n      let url1 =\n        \"https://www.n2yo.com/rest/v1/satellite/above/41.702/-76.014/0/90/\" +\n        id +\n        \"/&apiKey=TY7W6H-2YWZWQ-9W9WEL-4FIH\";\n      urls.push(url1);\n    }\n    return urls;\n  }\n\n  //--------------------------------------render and return--------------------------------\n  render() {\n    const { nasa, Data, launchDate,apodData } = this.state;\n    //console.log(launchDate)\n    return (\n      <div className=\"satinfo\">\n        <h2>Total Satellites : {launchDate.length}</h2>\n        <div className=\"satinfo_container\">\n          <div className=\"item1\">\n            <video autoPlay controls muted loop src={nasa} type=\"video/mp4\" />\n          </div>\n\n          <Chart DataSet={Data} />\n          <BarData DataSets={launchDate} />\n          <WorldMap WorldDataSet={launchDate} />\n        \n        </div>\n      </div>\n    );\n  }\n}\nexport default SatInfo;\n"]},"metadata":{},"sourceType":"module"}