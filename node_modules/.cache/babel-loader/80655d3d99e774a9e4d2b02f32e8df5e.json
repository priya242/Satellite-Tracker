{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/my-app/src/App.js\";\nimport React from \"react\";\nimport \"./style.css\"; //import { render } from \"react-dom\";\n//import Header from \"./components/Header\"\n//import Main from \"./components/Main\"\n//import Footer  from \"./components/Footer\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nasa: [],\n      Data: [],\n      isLoaded: false\n    };\n  }\n\n  fetchData() {\n    const url = \"https://images-api.nasa.gov/asset/ISS%204K%20Crew%20Earth%20Observations\";\n    const urls = this.loadSat();\n    fetch(url).then(response => response.json()).then(data => {\n      return data;\n    }).then(data => {\n      this.setState({\n        nasa: data.collection.items[1].href,\n        isLoaded: true\n      });\n    });\n    Promise.all(urls.map(url => fetch(url))).then(responses => Promise.all(responses.map(r => r.json()))).then(values => {\n      return values;\n    }).then(data => {\n      this.setState({\n        isLoaded: true,\n        Data: data\n      });\n    }); // .catch((error) = console.log(error));\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  loadSat() {\n    let urls = [];\n\n    for (let id = 1; id <= 10; id++) {\n      let url1 = \"https://www.n2yo.com/rest/v1/satellite/above/41.702/-76.014/0/70/\" + id + \"/&apiKey=TY7W6H-2YWZWQ-9W9WEL-4FIH\";\n      urls.push(url1);\n    }\n\n    return urls; //console.log(urls)\n  }\n\n  render() {\n    //const { nasa, satellites, category, isLoaded } = this.state;\n    const {\n      nasa,\n      Data,\n      isLoaded\n    } = this.state;\n    var categoryList = [];\n    var satelliteList = [];\n\n    for (var i = 0; i < Data.length; i++) {\n      console.log(\"This is my second iteration under render: \" + Data[i].info);\n      categoryDiv.push( /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 24\n        }\n      }, Data[i].info.category));\n      satelliteCountDiv.push( /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 30\n        }\n      }, Data[i].info.satcount));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \"Satellite Tracker\"), !isLoaded && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 23\n      }\n    }, \"Loading...\"), /*#__PURE__*/React.createElement(\"video\", {\n      autoPlay: true,\n      controls: true,\n      muted: true,\n      loop: true,\n      src: nasa,\n      type: \"video/mp4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, categoryDiv), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, satelliteCountDiv));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/my-app/src/App.js"],"names":["React","App","Component","constructor","props","state","nasa","Data","isLoaded","fetchData","url","urls","loadSat","fetch","then","response","json","data","setState","collection","items","href","Promise","all","map","responses","r","values","componentDidMount","id","url1","push","render","categoryList","satelliteList","i","length","console","log","info","categoryDiv","category","satelliteCountDiv","satcount"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n//import { render } from \"react-dom\";\n//import Header from \"./components/Header\"\n//import Main from \"./components/Main\"\n//import Footer  from \"./components/Footer\"\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nasa: [],\n      Data: [],\n      isLoaded: false,\n    };\n  }\n  fetchData() {\n    const url =\n      \"https://images-api.nasa.gov/asset/ISS%204K%20Crew%20Earth%20Observations\";\n    const urls = this.loadSat();\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        return data;\n      })\n      .then((data) => {\n        this.setState({\n          nasa: data.collection.items[1].href,\n          isLoaded: true,\n        });\n      });\n\n    Promise.all(urls.map((url) => fetch(url)))\n      .then((responses) => Promise.all(responses.map((r) => r.json())))\n      .then((values) => {\n        return values;\n      })\n      .then((data) => {\n        this.setState({\n          isLoaded: true,\n          Data: data,\n        });\n      });\n\n    // .catch((error) = console.log(error));\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  loadSat() {\n    let urls = [];\n    for (let id = 1; id <= 10; id++) {\n      let url1 =\n        \"https://www.n2yo.com/rest/v1/satellite/above/41.702/-76.014/0/70/\" +\n        id +\n        \"/&apiKey=TY7W6H-2YWZWQ-9W9WEL-4FIH\";\n      urls.push(url1);\n    }\n    return urls;\n    //console.log(urls)\n  }\n  render() {\n    //const { nasa, satellites, category, isLoaded } = this.state;\n    const { nasa, Data, isLoaded } = this.state;\n    var categoryList = [];\n    var satelliteList = [];\n    for (var i = 0; i < Data.length; i++) {\n      console.log(\n        \"This is my second iteration under render: \" + Data[i].info\n      );\n      categoryDiv.push(<div>{Data[i].info.category}</div>);\n      satelliteCountDiv.push(<div>{Data[i].info.satcount}</div>);\n    }\n\n    return (\n      <React.Fragment>\n        <h1>Satellite Tracker</h1>\n        {!isLoaded && <p>Loading...</p>}\n        <video autoPlay controls muted loop src={nasa} type=\"video/mp4\" />\n\n        <div>{categoryDiv}</div>\n\n        <div>{satelliteCountDiv}</div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}