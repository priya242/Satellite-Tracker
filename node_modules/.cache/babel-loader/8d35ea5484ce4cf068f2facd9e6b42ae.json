{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/my-app/src/components/Landing.js\";\nimport React from \"react\";\nimport Slider from \"./SliderImage\";\n\nclass Landing extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      imgtags: []\n    };\n  }\n\n  componentDidMount() {\n    //const NASA_API_KEY = process.env.REACT_APP_NASA_API_KEY;\n    const latest = new Date();\n    latest.setDate(latest.getDate() - 1);\n\n    function pad(s) {\n      return s < 10 ? \"0\" + s : s;\n    }\n\n    const latest_string = [latest.getFullYear(), pad(latest.getMonth() + 1), pad(latest.getDate())].join(\"-\");\n    const image_dates = [latest.getFullYear(), pad(latest.getMonth() + 1), pad(latest.getDate())].join(\"/\");\n    let images = [];\n    fetch(`https://api.nasa.gov/EPIC/api/natural/date/${encodeURIComponent(latest_string)}?api_key=twk4KeZwwqGPWJFY9ksFShKEyoDGimDlJAjwDH0z`).then(response => response.json()).then(data => {\n      for (let d of data) {\n        //console.log(d)\n        images.push(d.image);\n      }\n\n      console.log(data);\n    }).then(() => {\n      let l_imgtags = images.map(i => \"https://epic.gsfc.nasa.gov/archive/natural/\" + image_dates + \"/png/\" + i + \".png\"); //console.log(l_imgtags)\n\n      return l_imgtags;\n    }).then(l_imgtags => {\n      console.log(\"inside fetch chain\");\n      this.setState({\n        imgtags: l_imgtags\n      });\n      console.log(this.state.imgtags);\n    }).catch(error => {\n      console.log(\"Request failed: \", error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"landing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"landing-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lgrid-item1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Slider, {\n      images: this.state.imgtags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lgrid-item2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, \"Satellite Tracker\")));\n  }\n\n}\n\nexport default Landing;","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/my-app/src/components/Landing.js"],"names":["React","Slider","Landing","Component","constructor","state","imgtags","componentDidMount","latest","Date","setDate","getDate","pad","s","latest_string","getFullYear","getMonth","join","image_dates","images","fetch","encodeURIComponent","then","response","json","data","d","push","image","console","log","l_imgtags","map","i","setState","catch","error","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACA,UAAMC,MAAM,GAAG,IAAIC,IAAJ,EAAf;AACAD,IAAAA,MAAM,CAACE,OAAP,CAAeF,MAAM,CAACG,OAAP,KAAmB,CAAlC;;AACA,aAASC,GAAT,CAAaC,CAAb,EAAgB;AACd,aAAOA,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAf,GAAmBA,CAA1B;AACD;;AACD,UAAMC,aAAa,GAAG,CACpBN,MAAM,CAACO,WAAP,EADoB,EAEpBH,GAAG,CAACJ,MAAM,CAACQ,QAAP,KAAoB,CAArB,CAFiB,EAGpBJ,GAAG,CAACJ,MAAM,CAACG,OAAP,EAAD,CAHiB,EAIpBM,IAJoB,CAIf,GAJe,CAAtB;AAMA,UAAMC,WAAW,GAAG,CAClBV,MAAM,CAACO,WAAP,EADkB,EAElBH,GAAG,CAACJ,MAAM,CAACQ,QAAP,KAAoB,CAArB,CAFe,EAGlBJ,GAAG,CAACJ,MAAM,CAACG,OAAP,EAAD,CAHe,EAIlBM,IAJkB,CAIb,GAJa,CAApB;AAKA,QAAIE,MAAM,GAAG,EAAb;AACAC,IAAAA,KAAK,CACF,8CAA6CC,kBAAkB,CAC9DP,aAD8D,CAE9D,mDAHC,CAAL,CAKGQ,IALH,CAKSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EALtB,EAMGF,IANH,CAMSG,IAAD,IAAU;AACd,WAAK,IAAIC,CAAT,IAAcD,IAAd,EAAoB;AAClB;AACAN,QAAAA,MAAM,CAACQ,IAAP,CAAYD,CAAC,CAACE,KAAd;AACD;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACD,KAZH,EAaGH,IAbH,CAaQ,MAAM;AACV,UAAIS,SAAS,GAAGZ,MAAM,CAACa,GAAP,CAAYC,CAAD,IACrB,gDACAf,WADA,GAEA,OAFA,GAGAe,CAHA,GAIA,MALU,CAAhB,CADU,CAUX;;AACC,aAAOF,SAAP;AACD,KAzBH,EA0BGT,IA1BH,CA0BSS,SAAD,IAAe;AACnBF,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,WAAKI,QAAL,CAAc;AAAE5B,QAAAA,OAAO,EAAEyB;AAAX,OAAd;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzB,KAAL,CAAWC,OAAvB;AACD,KA9BH,EA+BG6B,KA/BH,CA+BUC,KAAD,IAAW;AAChBP,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCM,KAAhC;AACD,KAjCH;AAkCC;;AAGHC,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAG,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACF,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAG,KAAKhC,KAAL,CAAWC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADE,CADF,eAIA;AAAK,MAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJA,CADF,CADF;AAaD;;AA/EmC;;AAkFtC,eAAeJ,OAAf","sourcesContent":["import React from \"react\";\nimport Slider from \"./SliderImage\"\n\nclass Landing extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      imgtags: [],\n    };\n  }\n  \n  componentDidMount() {\n    //const NASA_API_KEY = process.env.REACT_APP_NASA_API_KEY;\n    const latest = new Date();\n    latest.setDate(latest.getDate() - 1);\n    function pad(s) {\n      return s < 10 ? \"0\" + s : s;\n    }\n    const latest_string = [\n      latest.getFullYear(),\n      pad(latest.getMonth() + 1),\n      pad(latest.getDate()),\n    ].join(\"-\");\n\n    const image_dates = [\n      latest.getFullYear(),\n      pad(latest.getMonth() + 1),\n      pad(latest.getDate()),\n    ].join(\"/\");\n    let images = [];\n    fetch(\n      `https://api.nasa.gov/EPIC/api/natural/date/${encodeURIComponent(\n        latest_string\n      )}?api_key=twk4KeZwwqGPWJFY9ksFShKEyoDGimDlJAjwDH0z`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        for (let d of data) {\n          //console.log(d)\n          images.push(d.image);\n        }\n        console.log(data)\n      })\n      .then(() => {\n        let l_imgtags = images.map((i) => (         \n              \"https://epic.gsfc.nasa.gov/archive/natural/\" +\n              image_dates +\n              \"/png/\" +\n              i +\n              \".png\"        \n          \n        ));\n      \n       //console.log(l_imgtags)\n        return l_imgtags;\n      })\n      .then((l_imgtags) => {\n        console.log(\"inside fetch chain\");\n        this.setState({ imgtags: l_imgtags });\n        console.log(this.state.imgtags);\n      })\n      .catch((error) => {\n        console.log(\"Request failed: \", error);\n      });\n    }\n\n\n  render() {\n\n    return (\n      <div className = \"landing\">\n        <div className = \"landing-container\">\n          <div className = \"lgrid-item1\">\n        <Slider images ={this.state.imgtags}/>\n        </div>\n        <div className = \"lgrid-item2\">\n          Satellite Tracker\n        </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Landing;\n"]},"metadata":{},"sourceType":"module"}