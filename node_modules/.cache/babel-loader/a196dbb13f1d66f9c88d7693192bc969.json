{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/my-app/src/components/BarChart.js\";\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nclass BarChart extends React.Component {\n  render() {\n    var years = [];\n\n    if (this.props.DataSets.above) {\n      var satData = this.props.DataSets.above;\n\n      for (var i = 0; i < satData.length; i++) {\n        var date = satData[i].launchDate;\n        var dataObject = new Date(date);\n\n        if (dataObject.getFullYear()) {\n          years.push(dataObject.getFullYear());\n        }\n      }\n    }\n\n    var yearlyData = years.reduce(function (object, satCount) {\n      if (!object[satCount]) {\n        object[satCount] = 1;\n      } else {\n        object[satCount]++;\n      }\n\n      return object;\n    }, {});\n    const data = {\n      labels: Object.keys(yearlyData),\n      datasets: [{\n        label: \"Satellite Launch \",\n        backgroundColor: \"rgba(255, 215, 0,0.8)\",\n        borderColor: \"rgba(0 ,0 ,238,1)\",\n        borderWidth: 1,\n        hoverBackgroundColor: \"rgba(255, 215, 0,0.4)\",\n        hoverBorderColor: \"rgba(0 ,0 ,238,1)\",\n        barPercentage: 0.5,\n        barThickness: 20,\n        data: Object.values(yearlyData)\n      }]\n    };\n    const options = {\n      legend: {\n        display: true,\n        labels: {\n          fontColor: \"#fff\"\n        }\n      },\n      legendCallback: function (chart) {\n        //html string\n        return \"<select><option value='2010-2020'>2010-2020</option></select>\";\n      },\n      scales: {\n        yAxes: [{\n          scaleLabel: {\n            padding: 20\n          },\n          ticks: {\n            autoSkip: false,\n            fontColor: \"#fff\",\n            fontSize: 14\n          }\n        }],\n        xAxes: [{\n          ticks: {\n            fontColor: \"#fff\",\n            fontSize: 14\n          }\n        }]\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"barcharts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"Active Satellites\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"chart-legends\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Bar, {\n      data: data,\n      height: 20,\n      width: 80,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/my-app/src/components/BarChart.js"],"names":["React","Bar","BarChart","Component","render","years","props","DataSets","above","satData","i","length","date","launchDate","dataObject","Date","getFullYear","push","yearlyData","reduce","object","satCount","data","labels","Object","keys","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","barPercentage","barThickness","values","options","legend","display","fontColor","legendCallback","chart","scales","yAxes","scaleLabel","padding","ticks","autoSkip","fontSize","xAxes"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nclass BarChart extends React.Component {\n  render() {\n    var years = [];\n    if (this.props.DataSets.above) {\n      var satData = this.props.DataSets.above;\n      for (var i = 0; i < satData.length; i++) {\n        var date = satData[i].launchDate;\n        var dataObject = new Date(date);\n        if (dataObject.getFullYear()) {\n          years.push(dataObject.getFullYear());\n        }\n      }\n    }\n    var yearlyData = years.reduce(function (object, satCount) {\n      if (!object[satCount]) {\n        object[satCount] = 1;\n      } else {\n        object[satCount]++;\n      }\n      return object;\n    }, {});\n    \n    const data = {\n      labels: Object.keys(yearlyData),\n      datasets: [\n        {\n          label: \"Satellite Launch \",\n          backgroundColor: \"rgba(255, 215, 0,0.8)\",\n          borderColor: \"rgba(0 ,0 ,238,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(255, 215, 0,0.4)\",\n          hoverBorderColor: \"rgba(0 ,0 ,238,1)\",\n          barPercentage: 0.5,\n          barThickness: 20,\n          data: Object.values(yearlyData),\n        },\n      ],\n    };\n    const options = {\n      legend: {\n        display: true,\n        labels: {\n          fontColor: \"#fff\",\n        },\n      },\n      legendCallback: function(chart){\n        //html string\n        return \"<select><option value='2010-2020'>2010-2020</option></select>\"\n\n      },\n\n      scales: {\n        yAxes: [\n          {\n            scaleLabel: {\n              padding: 20,\n            },\n            ticks: {\n              autoSkip: false,\n              fontColor: \"#fff\",\n              fontSize: 14,\n            },\n          },\n        ],\n        xAxes: [\n          {\n            ticks: {\n              fontColor: \"#fff\",\n              fontSize: 14,\n            },\n          },\n        ],\n      },\n    };\n\n    return (\n      <div className=\"barcharts\">\n        <h1>Active Satellites</h1>\n        <div id = \"chart-legends\"></div>\n        <Bar data={data} height={20} width={80} options={options} />\n      </div>\n    );\n  }\n}\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}