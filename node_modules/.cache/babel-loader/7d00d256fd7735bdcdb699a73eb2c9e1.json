{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/my-app/src/components/satinfo/WorldMap.js\";\nimport React from \"react\"; //import { render } from \"react-dom\";\n\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport mapDataWorld from \"./mapDataWorld\";\n\nclass WorldMap extends React.Component {\n  // Load Highcharts Maps as a module\n  render() {\n    require(\"highcharts/modules/map\")(Highcharts);\n\n    const tmpdata = this.props.WorldDataSet;\n    const map = mapDataWorld;\n    let data = [];\n\n    for (var i = 0; i < tmpdata.length; i++) {\n      let wd = {};\n      wd[\"name\"] = tmpdata[i].satname;\n      wd[\"lat\"] = tmpdata[i].satlat;\n      wd[\"lon\"] = tmpdata[i].satlng;\n      data.push(wd);\n    }\n\n    console.log(data); // Create the chart\n\n    const mapOptions = {\n      chart: {\n        backgroundColor: {\n          linearGradient: {\n            x1: 0,\n            y1: 0,\n            x2: 1,\n            y2: 1\n          },\n          stops: [[0, \"#2a2a2b\"], [1, \"#3e3e40\"]]\n        },\n        plotBorderColor: \"#606063\"\n      },\n      title: {\n        text: \"\"\n      },\n\n      /**  colorAxis: {\n      min: 0,\n      stops: [\n        [0.2, \"#0000FF\"],\n        [0.4, \"#1E90FF)\"],\n        [0.6, \"#00BFFF\"],\n        [0.8, \"#87CEFF\"],\n        [0.2, \"B0E2FF\"],\n      ],\n      },**/\n      tooltip: {\n        headerFormat: '',\n        pointFormat: \"{point.name}<br>\" + \"Lat: {point.lat} \" + \"Lon: {point.lon}<br>\"\n      },\n      mapNavigation: {\n        enabled: true\n      },\n      series: [{\n        mapData: map,\n        name: \"Basemap\",\n        borderColor: \"#A0A0A0\",\n        nullColor: \"rgba(200, 200, 200, 0.3)\",\n        showInLegend: false\n      }, {\n        type: \"mappoint\",\n        name: \"Satellites\",\n        color: \"#f9ef0e\",\n        data: [{\n          name: 'London',\n          lat: 51.507222,\n          lon: -0.1275\n        }, {\n          name: 'Birmingham',\n          lat: 52.483056,\n          lon: -1.893611\n        }, {\n          name: 'Leeds',\n          lat: 53.799722,\n          lon: -1.549167\n        }, {\n          name: 'Glasgow',\n          lat: 55.858,\n          lon: -4.259\n        }, {\n          name: 'Sheffield',\n          lat: 53.383611,\n          lon: -1.466944\n        }, {\n          name: 'Liverpool',\n          lat: 53.4,\n          lon: -3\n        }, {\n          name: 'Bristol',\n          lat: 51.45,\n          lon: -2.583333\n        }, {\n          name: 'Belfast',\n          lat: 54.597,\n          lon: -5.93\n        }, {\n          name: 'Lerwick',\n          lat: 60.155,\n          lon: -1.145,\n          dataLabels: {\n            align: 'left',\n            x: 5,\n            verticalAlign: 'middle'\n          }\n        }],\n        dataLabels: {\n          enabled: true,\n          format: \"{point.name}\",\n          color: \"#F0F0F3\"\n        },\n        marker: {\n          lineColor: \"#333\"\n        },\n        //data: data,\n        showInLegend: false\n      }]\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid-item4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(HighchartsReact, {\n      options: mapOptions,\n      constructorType: \"mapChart\",\n      highcharts: Highcharts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default WorldMap;","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/my-app/src/components/satinfo/WorldMap.js"],"names":["React","Highcharts","HighchartsReact","mapDataWorld","WorldMap","Component","render","require","tmpdata","props","WorldDataSet","map","data","i","length","wd","satname","satlat","satlng","push","console","log","mapOptions","chart","backgroundColor","linearGradient","x1","y1","x2","y2","stops","plotBorderColor","title","text","tooltip","headerFormat","pointFormat","mapNavigation","enabled","series","mapData","name","borderColor","nullColor","showInLegend","type","color","lat","lon","dataLabels","align","x","verticalAlign","format","marker","lineColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AACA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AACrC;AACAC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAAC,wBAAD,CAAP,CAAkCN,UAAlC;;AACA,UAAMO,OAAO,GAAG,KAAKC,KAAL,CAAWC,YAA3B;AACA,UAAMC,GAAG,GAAGR,YAAZ;AACA,QAAIS,IAAI,GAAG,EAAX;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,OAAO,CAACM,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,UAAIE,EAAE,GAAG,EAAT;AACAA,MAAAA,EAAE,CAAC,MAAD,CAAF,GAAaP,OAAO,CAACK,CAAD,CAAP,CAAWG,OAAxB;AACAD,MAAAA,EAAE,CAAC,KAAD,CAAF,GAAYP,OAAO,CAACK,CAAD,CAAP,CAAWI,MAAvB;AACAF,MAAAA,EAAE,CAAC,KAAD,CAAF,GAAYP,OAAO,CAACK,CAAD,CAAP,CAAWK,MAAvB;AACAN,MAAAA,IAAI,CAACO,IAAL,CAAUJ,EAAV;AACD;;AACDK,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ,EAbO,CAcP;;AACA,UAAMU,UAAU,GAAG;AACjBC,MAAAA,KAAK,EAAE;AACLC,QAAAA,eAAe,EAAE;AACfC,UAAAA,cAAc,EAAE;AAAEC,YAAAA,EAAE,EAAE,CAAN;AAASC,YAAAA,EAAE,EAAE,CAAb;AAAgBC,YAAAA,EAAE,EAAE,CAApB;AAAuBC,YAAAA,EAAE,EAAE;AAA3B,WADD;AAEfC,UAAAA,KAAK,EAAE,CACL,CAAC,CAAD,EAAI,SAAJ,CADK,EAEL,CAAC,CAAD,EAAI,SAAJ,CAFK;AAFQ,SADZ;AAQLC,QAAAA,eAAe,EAAE;AARZ,OADU;AAWjBC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE;AADD,OAXU;;AAcjB;;;;;;;;;;AAWAC,MAAAA,OAAO,EAAE;AACPC,QAAAA,YAAY,EAAC,EADN;AAEPC,QAAAA,WAAW,EACT,qBAAqB,mBAArB,GAA2C;AAHtC,OAzBQ;AA+BjBC,MAAAA,aAAa,EAAE;AACbC,QAAAA,OAAO,EAAE;AADI,OA/BE;AAmCjBC,MAAAA,MAAM,EAAE,CACN;AACEC,QAAAA,OAAO,EAAE7B,GADX;AAEE8B,QAAAA,IAAI,EAAE,SAFR;AAGEC,QAAAA,WAAW,EAAE,SAHf;AAIEC,QAAAA,SAAS,EAAE,0BAJb;AAKEC,QAAAA,YAAY,EAAE;AALhB,OADM,EAQN;AACEC,QAAAA,IAAI,EAAE,UADR;AAEEJ,QAAAA,IAAI,EAAE,YAFR;AAGEK,QAAAA,KAAK,EAAE,SAHT;AAIElC,QAAAA,IAAI,EAAE,CAAC;AACL6B,UAAAA,IAAI,EAAE,QADD;AAELM,UAAAA,GAAG,EAAE,SAFA;AAGLC,UAAAA,GAAG,EAAE,CAAC;AAHD,SAAD,EAIH;AACDP,UAAAA,IAAI,EAAE,YADL;AAEDM,UAAAA,GAAG,EAAE,SAFJ;AAGDC,UAAAA,GAAG,EAAE,CAAC;AAHL,SAJG,EAQH;AACDP,UAAAA,IAAI,EAAE,OADL;AAEDM,UAAAA,GAAG,EAAE,SAFJ;AAGDC,UAAAA,GAAG,EAAE,CAAC;AAHL,SARG,EAYH;AACDP,UAAAA,IAAI,EAAE,SADL;AAEDM,UAAAA,GAAG,EAAE,MAFJ;AAGDC,UAAAA,GAAG,EAAE,CAAC;AAHL,SAZG,EAgBH;AACDP,UAAAA,IAAI,EAAE,WADL;AAEDM,UAAAA,GAAG,EAAE,SAFJ;AAGDC,UAAAA,GAAG,EAAE,CAAC;AAHL,SAhBG,EAoBH;AACDP,UAAAA,IAAI,EAAE,WADL;AAEDM,UAAAA,GAAG,EAAE,IAFJ;AAGDC,UAAAA,GAAG,EAAE,CAAC;AAHL,SApBG,EAwBH;AACDP,UAAAA,IAAI,EAAE,SADL;AAEDM,UAAAA,GAAG,EAAE,KAFJ;AAGDC,UAAAA,GAAG,EAAE,CAAC;AAHL,SAxBG,EA4BH;AACDP,UAAAA,IAAI,EAAE,SADL;AAEDM,UAAAA,GAAG,EAAE,MAFJ;AAGDC,UAAAA,GAAG,EAAE,CAAC;AAHL,SA5BG,EAgCH;AACDP,UAAAA,IAAI,EAAE,SADL;AAEDM,UAAAA,GAAG,EAAE,MAFJ;AAGDC,UAAAA,GAAG,EAAE,CAAC,KAHL;AAIDC,UAAAA,UAAU,EAAE;AACVC,YAAAA,KAAK,EAAE,MADG;AAEVC,YAAAA,CAAC,EAAE,CAFO;AAGVC,YAAAA,aAAa,EAAE;AAHL;AAJX,SAhCG,CAJR;AA8CEH,QAAAA,UAAU,EAAE;AACVX,UAAAA,OAAO,EAAE,IADC;AAEVe,UAAAA,MAAM,EAAE,cAFE;AAGVP,UAAAA,KAAK,EAAE;AAHG,SA9Cd;AAmDEQ,QAAAA,MAAM,EAAE;AACNC,UAAAA,SAAS,EAAE;AADL,SAnDV;AAsDE;AACAX,QAAAA,YAAY,EAAE;AAvDhB,OARM;AAnCS,KAAnB;AAuGA,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AACE,MAAA,OAAO,EAAEtB,UADX;AAEE,MAAA,eAAe,EAAE,UAFnB;AAGE,MAAA,UAAU,EAAErB,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AASD;;AAjIoC;;AAmIvC,eAAeG,QAAf","sourcesContent":["import React from \"react\";\n//import { render } from \"react-dom\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport mapDataWorld from \"./mapDataWorld\";\nclass WorldMap extends React.Component {\n  // Load Highcharts Maps as a module\n  render() {\n    require(\"highcharts/modules/map\")(Highcharts);\n    const tmpdata = this.props.WorldDataSet;\n    const map = mapDataWorld;\n    let data = [];\n\n    for (var i = 0; i < tmpdata.length; i++) {\n      let wd = {};\n      wd[\"name\"] = tmpdata[i].satname;\n      wd[\"lat\"] = tmpdata[i].satlat;\n      wd[\"lon\"] = tmpdata[i].satlng;\n      data.push(wd);\n    }\n    console.log(data);\n    // Create the chart\n    const mapOptions = {\n      chart: {\n        backgroundColor: {\n          linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n          stops: [\n            [0, \"#2a2a2b\"],\n            [1, \"#3e3e40\"],\n          ],\n        },\n        plotBorderColor: \"#606063\",\n      },\n      title: {\n        text: \"\",\n      },\n      /**  colorAxis: {\n      min: 0,\n      stops: [\n        [0.2, \"#0000FF\"],\n        [0.4, \"#1E90FF)\"],\n        [0.6, \"#00BFFF\"],\n        [0.8, \"#87CEFF\"],\n        [0.2, \"B0E2FF\"],\n      ],\n    },**/\n\n      tooltip: {\n        headerFormat:'',\n        pointFormat:\n          \"{point.name}<br>\" + \"Lat: {point.lat} \" + \"Lon: {point.lon}<br>\",\n      },\n\n      mapNavigation: {\n        enabled: true,\n      },\n\n      series: [\n        {\n          mapData: map,\n          name: \"Basemap\",\n          borderColor: \"#A0A0A0\",\n          nullColor: \"rgba(200, 200, 200, 0.3)\",\n          showInLegend: false,\n        },\n        {\n          type: \"mappoint\",\n          name: \"Satellites\",\n          color: \"#f9ef0e\",\n          data: [{\n            name: 'London',\n            lat: 51.507222,\n            lon: -0.1275\n          }, {\n            name: 'Birmingham',\n            lat: 52.483056,\n            lon: -1.893611\n          }, {\n            name: 'Leeds',\n            lat: 53.799722,\n            lon: -1.549167\n          }, {\n            name: 'Glasgow',\n            lat: 55.858,\n            lon: -4.259\n          }, {\n            name: 'Sheffield',\n            lat: 53.383611,\n            lon: -1.466944\n          }, {\n            name: 'Liverpool',\n            lat: 53.4,\n            lon: -3\n          }, {\n            name: 'Bristol',\n            lat: 51.45,\n            lon: -2.583333\n          }, {\n            name: 'Belfast',\n            lat: 54.597,\n            lon: -5.93\n          }, {\n            name: 'Lerwick',\n            lat: 60.155,\n            lon: -1.145,\n            dataLabels: {\n              align: 'left',\n              x: 5,\n              verticalAlign: 'middle'\n            }\n          }],\n          dataLabels: {\n            enabled: true,\n            format: \"{point.name}\",\n            color: \"#F0F0F3\",\n          },\n          marker: {\n            lineColor: \"#333\",\n          },\n          //data: data,\n          showInLegend: false,\n        },\n      ],\n    };\n\n    return (\n      <div className=\"grid-item4\">\n        <HighchartsReact\n          options={mapOptions}\n          constructorType={\"mapChart\"}\n          highcharts={Highcharts}\n        />\n      </div>\n    );\n  }\n}\nexport default WorldMap;\n"]},"metadata":{},"sourceType":"module"}