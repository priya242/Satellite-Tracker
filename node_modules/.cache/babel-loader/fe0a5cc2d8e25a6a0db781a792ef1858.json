{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/my-app/src/components/NEvents.js\";\nimport React from \"react\";\nimport NEworldmap from \"./nevents/NEworldmap\";\nimport NEeach from \"./nevents/NEeach\";\nimport NEgraph from \"./nevents/NEgraph\";\nimport events from \"./nevents/tempin\";\n\nclass NEvents extends React.Component {\n  // const NASA_API_KEY = encodeURIComponent(process.env.REACT_APP_NE_API_KEY);\n  constructor() {\n    super();\n\n    this.daysChange = event => {\n      if (event.key === \"Enter\") {\n        alert(\"here\");\n        this.setState({\n          days: event.target.value\n        });\n      }\n    };\n\n    this.fetchData = days => {\n      // fetch(\n      //   \"https://eonet.sci.gsfc.nasa.gov/api/v3/events?days=${encodeURIComponent({days})}&status=open\"\n      // )\n      //   .then((response) => response.json())\n      //   .then((data) => {\n      //     console.log(data.events);\n      //   })\n      //   .catch((error) => {\n      //     console.log(\"Request failed: \", error);\n      //   });\n      let data = require(\"./nevents/tempin\");\n\n      let donutsdict = {};\n      let l_count = 0;\n\n      for (let event of data) {\n        l_count++;\n        console.log(event); //counting the number of events for each category\n        //to prepare donut charts of 4 most frequently occuring category of events\n\n        for (let category of event.categories) {\n          if (category.id in donutsdict) {\n            donutsdict[category.id]++;\n          } else {\n            donutsdict[category.id] = 1;\n          }\n        }\n      }\n\n      let l_donuts = Object.keys(donutsdict).map(key => [key, donutsdict[key]]);\n      l_donuts.sort((first, second) => second[1] - first[1]);\n      this.setState({\n        count: l_count,\n        donuts: l_donuts\n      });\n    };\n\n    this.state = {\n      count: 0,\n      events: [],\n      days: 30,\n      donuts: []\n    };\n    this.fetchData = this.fetchData.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData(this.state.days);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nevents\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"navbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, \"Natural Events\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav-controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \"Information for the last\", \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      defaultValue: this.state.days,\n      onKeyDown: this.daysChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), \"days\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"number_events\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \"Number of events: \", this.state.count), /*#__PURE__*/React.createElement(NEworldmap, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NEeach, {\n      event: this.state.donuts[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(NEeach, {\n      event: this.state.donuts[1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(NEeach, {\n      event: this.state.donuts[2],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(NEeach, {\n      event: this.state.donuts[3],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(NEgraph, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default NEvents;","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/my-app/src/components/NEvents.js"],"names":["React","NEworldmap","NEeach","NEgraph","events","NEvents","Component","constructor","daysChange","event","key","alert","setState","days","target","value","fetchData","data","require","donutsdict","l_count","console","log","category","categories","id","l_donuts","Object","keys","map","sort","first","second","count","donuts","state","bind","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport NEworldmap from \"./nevents/NEworldmap\";\nimport NEeach from \"./nevents/NEeach\";\nimport NEgraph from \"./nevents/NEgraph\";\nimport events from \"./nevents/tempin\";\n\nclass NEvents extends React.Component {\n  // const NASA_API_KEY = encodeURIComponent(process.env.REACT_APP_NE_API_KEY);\n\n  constructor() {\n    super();\n    this.state = {\n      count: 0,\n      events: [],\n      days: 30,\n      donuts: [],\n    };\n    this.fetchData = this.fetchData.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData(this.state.days);\n  }\n\n  daysChange = (event) => {\n    if (event.key === \"Enter\") {\n      alert(\"here\");\n      this.setState({ days: event.target.value });\n    }\n  };\n\n  fetchData = (days) => {\n    // fetch(\n    //   \"https://eonet.sci.gsfc.nasa.gov/api/v3/events?days=${encodeURIComponent({days})}&status=open\"\n    // )\n    //   .then((response) => response.json())\n    //   .then((data) => {\n    //     console.log(data.events);\n    //   })\n    //   .catch((error) => {\n    //     console.log(\"Request failed: \", error);\n    //   });\n\n    let data = require(\"./nevents/tempin\");\n\n    let donutsdict = {};\n    let l_count = 0;\n    for (let event of data) {\n      l_count++;\n      console.log(event);\n      //counting the number of events for each category\n      //to prepare donut charts of 4 most frequently occuring category of events\n      for (let category of event.categories) {\n        if (category.id in donutsdict) {\n          donutsdict[category.id]++;\n        } else {\n          donutsdict[category.id] = 1;\n        }\n      }\n    }\n    let l_donuts = Object.keys(donutsdict).map((key) => [key, donutsdict[key]]);\n    l_donuts.sort((first, second) => second[1] - first[1]);\n    this.setState({ count: l_count, donuts: l_donuts });\n  };\n\n  render() {\n    return (\n      <div className=\"nevents\">\n        <div className=\"navbar\">\n          <span>\n            <b>Natural Events</b>\n          </span>\n          <div className=\"nav-controls\">\n            Information for the last{\" \"}\n            <input\n              type=\"number\"\n              defaultValue={this.state.days}\n              onKeyDown={this.daysChange}\n            ></input>\n            days\n          </div>\n        </div>\n        <div className=\"number_events\">\n          Number of events: {this.state.count}\n        </div>\n        <NEworldmap />\n        <div>\n          <NEeach event={this.state.donuts[0]} />\n          <NEeach event={this.state.donuts[1]} />\n          <NEeach event={this.state.donuts[2]} />\n          <NEeach event={this.state.donuts[3]} />\n        </div>\n        <NEgraph />\n      </div>\n    );\n  }\n}\n\nexport default NEvents;\n"]},"metadata":{},"sourceType":"module"}