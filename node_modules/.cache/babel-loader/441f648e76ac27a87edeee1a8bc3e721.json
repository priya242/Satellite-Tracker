{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/my-app/src/App.js\";\nimport React from \"react\";\nimport \"./style.css\";\nimport Chart from \"./components/Chart\"; //import Main from \"./components/Main\"\n\nimport WorldMap from \"./components/WorldMap\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nasa: [],\n      Data: [],\n      SatCat: [],\n      isLoaded: false\n    };\n  }\n\n  fetchData() {\n    const url = \"https://images-api.nasa.gov/asset/ISS%204K%20Crew%20Earth%20Observations\";\n    const urls = this.loadSat(); // const url1 = \"https://uphere-space1.p.rapidapi.com/satellite/list?page=1\";\n\n    const url1 = \"https://www.n2yo.com/rest/v1/satellite/above/41.702/-76.014/0/70/0/&apiKey=TY7W6H-2YWZWQ-9W9WEL-4FIH\"; //--------------------fetching url-------------------\n\n    fetch(url).then(response => response.json()).then(data => {\n      return data;\n    }).then(data => {\n      this.setState({\n        nasa: data.collection.items[1].href,\n        isLoaded: true\n      });\n    }); //--------------------fetching url1-------------------\n\n    /**fetch(url1, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"uphere-space1.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"7c38e0936bmsh43070bf163c0855p15038cjsn373b4d98e3a6\"\n      }\n    })\n    .then((response) => response.json())\n      .then((data) => {\n          //return data;\n          console.log(data)\n        })\n    .catch(err => {\n      console.log(err);\n    }); **/\n\n    fetch(url1).then(response => response.json()).then(data => {\n      for (var i = 0; i < 1729; i++) {\n        console.log(data.above[i].launchDate);\n      }\n    }); //--------------------fetching urls----------------------------\n\n    Promise.all(urls.map(url => fetch(url))).then(responses => Promise.all(responses.map(r => r.json()))).then(values => {\n      return values;\n    }).then(data => {\n      this.setState({\n        isLoaded: true,\n        Data: data\n      });\n    }); // .catch((error) = console.log(error));\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  loadSat() {\n    let urls = [];\n\n    for (let id = 2; id <= 13; id++) {\n      let url1 = \"https://www.n2yo.com/rest/v1/satellite/above/41.702/-76.014/0/70/\" + id + \"/&apiKey=TY7W6H-2YWZWQ-9W9WEL-4FIH\";\n      urls.push(url1);\n    }\n\n    return urls; //console.log(urls)\n  } //------------------render and return--------------------\n\n\n  render() {\n    //const { nasa, satellites, category, isLoaded } = this.state;\n    const {\n      nasa,\n      Data,\n      isLoaded\n    } = this.state; // console.log(Data)\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, \"Satellite Tracker\"), !isLoaded && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 23\n      }\n    }, \"Loading...\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"video\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      autoPlay: true,\n      controls: true,\n      muted: true,\n      loop: true,\n      src: nasa,\n      type: \"video/mp4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Chart, {\n      DataSet: Data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(WorldMap, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/my-app/src/App.js"],"names":["React","Chart","WorldMap","App","Component","constructor","props","state","nasa","Data","SatCat","isLoaded","fetchData","url","urls","loadSat","url1","fetch","then","response","json","data","setState","collection","items","href","i","console","log","above","launchDate","Promise","all","map","responses","r","values","componentDidMount","id","push","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\nimport Chart from \"./components/Chart\"\n//import Main from \"./components/Main\"\nimport WorldMap  from \"./components/WorldMap\"\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nasa: [],\n      Data: [],\n      SatCat:[],\n      isLoaded: false,\n    };\n  }\n  fetchData() {\n    const url =\n      \"https://images-api.nasa.gov/asset/ISS%204K%20Crew%20Earth%20Observations\";\n    const urls = this.loadSat();\n   // const url1 = \"https://uphere-space1.p.rapidapi.com/satellite/list?page=1\";\n  const url1 =  \"https://www.n2yo.com/rest/v1/satellite/above/41.702/-76.014/0/70/0/&apiKey=TY7W6H-2YWZWQ-9W9WEL-4FIH\";\n    //--------------------fetching url-------------------\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        return data;\n      })\n      .then((data) => {\n        this.setState({\n          nasa: data.collection.items[1].href,\n          isLoaded: true,\n        });\n      });\n  //--------------------fetching url1-------------------\n  /**fetch(url1, {\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-rapidapi-host\": \"uphere-space1.p.rapidapi.com\",\n      \"x-rapidapi-key\": \"7c38e0936bmsh43070bf163c0855p15038cjsn373b4d98e3a6\"\n    }\n  })\n  .then((response) => response.json())\n    .then((data) => {\n        //return data;\n        console.log(data)\n      })\n  .catch(err => {\n    console.log(err);\n  }); **/\n  fetch(url1)\n      .then((response) => response.json())\n      .then((data)=> {\n        for(var i = 0; i < 1729;i++){\n        console.log(data.above[i].launchDate)\n        }\n      })\n  //--------------------fetching urls----------------------------\n    Promise.all(urls.map((url) => fetch(url)))\n      .then((responses) => Promise.all(responses.map((r) => r.json())))\n      .then((values) => {\n        return values;\n      })\n      .then((data) => {\n        this.setState({\n          isLoaded: true,\n          Data: data,\n        });\n      });\n\n    // .catch((error) = console.log(error));\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  loadSat() {\n    let urls = [];\n    for (let id = 2; id <= 13; id++) {\n      let url1 =\n        \"https://www.n2yo.com/rest/v1/satellite/above/41.702/-76.014/0/70/\" +\n        id +\n        \"/&apiKey=TY7W6H-2YWZWQ-9W9WEL-4FIH\";\n      urls.push(url1);\n    }\n    return urls;\n    //console.log(urls)\n  }\n  //------------------render and return--------------------\n  render() {\n    //const { nasa, satellites, category, isLoaded } = this.state;\n    const { nasa, Data, isLoaded } = this.state;\n   // console.log(Data)\n    return (\n      <React.Fragment>\n        <h1>Satellite Tracker</h1>\n        {!isLoaded && <p>Loading...</p>}\n        <div className = \"video\">\n        <video autoPlay controls muted loop src={nasa} type=\"video/mp4\" />\n        </div>\n        <Chart DataSet = {Data} />\n        <WorldMap />\n      </React.Fragment>\n    );\n    \n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}