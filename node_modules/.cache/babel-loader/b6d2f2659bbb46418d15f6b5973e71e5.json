{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/my-app/src/App.js\";\nimport React from \"react\";\nimport Chart from \"./components/Chart\";\nimport BarChart from \"./components/BarChart\";\nimport \"./css/style.css\";\nimport WorldMap from \"./components/WorldMap\";\nimport NEvents from \"./components/NEvents\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nasa: [],\n      Data: [],\n      SatCat: [],\n      launchDate: [],\n      isLoaded: false,\n      years: [],\n      yearlyData: []\n    };\n  }\n\n  fetchData() {\n    const url = \"https://images-api.nasa.gov/asset/ISS%204K%20Crew%20Earth%20Observations\";\n    const urls = this.loadSat();\n    const url1 = \"https://www.n2yo.com/rest/v1/satellite/above/41.702/-76.014/0/90/0/&apiKey=TY7W6H-2YWZWQ-9W9WEL-4FIH\"; //--------------------------------------fetching url-------------------------------------------------\n\n    fetch(url).then(response => response.json()).then(data => {\n      return data;\n    }).then(data => {\n      this.setState({\n        nasa: data.collection.items[1].href\n      });\n    }); //---------------------------------------fetching url1-------------------\n\n    fetch(url1).then(response => response.json()).then(data => {\n      return data; //console.log(data);\n    }).then(data => {\n      this.setState({\n        launchDate: data\n      });\n    });\n    console.log(data); //---------------------------------------fetching urls----------------------------\n\n    Promise.all(urls.map(url => fetch(url))).then(responses => Promise.all(responses.map(r => r.json()))).then(data => {\n      return data; // console.log(data)\n    }).then(data => {\n      this.setState({\n        isLoaded: true,\n        Data: data\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  loadSat() {\n    let urls = [];\n\n    for (let id = 2; id <= 53; id++) {\n      let url1 = \"https://www.n2yo.com/rest/v1/satellite/above/41.702/-76.014/0/90/\" + id + \"/&apiKey=TY7W6H-2YWZWQ-9W9WEL-4FIH\";\n      urls.push(url1);\n    }\n\n    return urls;\n  } //--------------------------------------render and return--------------------------------\n\n\n  render() {\n    const {\n      nasa,\n      Data,\n      isLoaded,\n      launchDate,\n      yearlyData,\n      years\n    } = this.state;\n    console.log(launchDate.above);\n\n    if (launchDate) {\n      var satData = launchDate.above;\n\n      for (var i = 0; i < satData.length; i++) {\n        var date = satData[i].launchDate;\n        var dataObject = new Date(date);\n\n        if (dataObject.getFullYear()) {\n          years.push(dataObject.getFullYear());\n        }\n      }\n    }\n\n    yearlyData = years.reduce(function (object, satCount) {\n      if (!object[satCount]) {\n        object[satCount] = 1;\n      } else {\n        object[satCount]++;\n      }\n\n      return object;\n    }, {});\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"navbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, \"Sattelite Tracker\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav-controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, \"Satellite Info\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, \"Natural Events\")))), /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      autoPlay: true,\n      controls: true,\n      muted: true,\n      loop: true,\n      src: nasa,\n      type: \"video/mp4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Chart, {\n      DataSet: Data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(BarChart, {\n      DataSets: yearlyData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(WorldMap, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(NEvents, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/my-app/src/App.js"],"names":["React","Chart","BarChart","WorldMap","NEvents","App","Component","constructor","props","state","nasa","Data","SatCat","launchDate","isLoaded","years","yearlyData","fetchData","url","urls","loadSat","url1","fetch","then","response","json","data","setState","collection","items","href","console","log","Promise","all","map","responses","r","componentDidMount","id","push","render","above","satData","i","length","date","dataObject","Date","getFullYear","reduce","object","satCount"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Chart from \"./components/Chart\";\nimport BarChart from \"./components/BarChart\";\nimport \"./css/style.css\";\nimport WorldMap from \"./components/WorldMap\";\nimport NEvents from \"./components/NEvents\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nasa: [],\n      Data: [],\n      SatCat: [],\n      launchDate: [],\n      isLoaded: false,\n      years:[],\n      yearlyData:[],\n    };\n  }\n  fetchData() {\n    const url =\n      \"https://images-api.nasa.gov/asset/ISS%204K%20Crew%20Earth%20Observations\";\n    const urls = this.loadSat();\n\n    const url1 =\n      \"https://www.n2yo.com/rest/v1/satellite/above/41.702/-76.014/0/90/0/&apiKey=TY7W6H-2YWZWQ-9W9WEL-4FIH\";\n    //--------------------------------------fetching url-------------------------------------------------\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        return data;\n      })\n      .then((data) => {\n        this.setState({\n          nasa: data.collection.items[1].href,\n        });\n      });\n    //---------------------------------------fetching url1-------------------\n    fetch(url1)\n      .then((response) => response.json())\n      .then((data) => {\n        return data;\n        //console.log(data);\n      })\n      .then((data) => {\n        this.setState({\n          launchDate: data,\n        });\n      });\n      console.log(data);\n  \n    //---------------------------------------fetching urls----------------------------\n    Promise.all(urls.map((url) => fetch(url)))\n      .then((responses) => Promise.all(responses.map((r) => r.json())))\n      .then((data) => {\n        return data;\n        // console.log(data)\n      })\n      .then((data) => {\n        this.setState({\n          isLoaded: true,\n          Data: data,\n        });\n      });\n  }\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  loadSat() {\n    let urls = [];\n    for (let id = 2; id <= 53; id++) {\n      let url1 =\n        \"https://www.n2yo.com/rest/v1/satellite/above/41.702/-76.014/0/90/\" +\n        id +\n        \"/&apiKey=TY7W6H-2YWZWQ-9W9WEL-4FIH\";\n      urls.push(url1);\n    }\n    return urls;\n  }\n\n  //--------------------------------------render and return--------------------------------\n  render() {\n    const { nasa, Data, isLoaded, launchDate,yearlyData,years} = this.state;\n    console.log(launchDate.above)\n    if (launchDate) {\n      var satData = launchDate.above\n  for (var i = 0; i < satData.length; i++) {\n    var date = satData[i].launchDate;\n    var dataObject = new Date(date);\n    if (dataObject.getFullYear()) {\n      years.push(dataObject.getFullYear());        \n    }\n  }\n}\n yearlyData = years.reduce(function (object, satCount) {\n  if (!object[satCount]) {\n    object[satCount] = 1;\n  } else {\n    object[satCount]++;\n  }\n  return object;\n}, {});\n\n    return (\n      <div>\n        <div className=\"navbar\">\n          <span>\n            <b>Sattelite Tracker</b>\n          </span>\n          <div className=\"nav-controls\">\n            <div>Satellite Info</div>\n            <a href=\"/\">\n              <div>Natural Events</div>\n            </a>\n          </div>\n        </div>\n        <React.Fragment>\n          {/* <h1>Satellite Tracker</h1> */}\n          {/*!isLoaded && <p>Loading...</p>*/}\n          <div>\n            <video autoPlay controls muted loop src={nasa} type=\"video/mp4\" />\n          </div>\n          <Chart DataSet={Data} />\n          <BarChart DataSets={yearlyData} />\n          <WorldMap />\n        </React.Fragment>\n        <NEvents />\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}