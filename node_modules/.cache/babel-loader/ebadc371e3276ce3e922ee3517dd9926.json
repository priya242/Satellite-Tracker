{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/my-app/src/components/Chart.js\";\nimport React, { Component } from \"react\"; //var Chart = require(\"chart.js\");\n\nexport default function Chart(props) {\n  var label = [];\n  var Data = [];\n\n  for (var i = 0; i < props.DataSet.length; i++) {\n    label.push(props.DataSet[i].info.category);\n    Data.push(props.DataSet[i].info.satcount);\n  }\n\n  var myChart = new Chart(node, {\n    type: 'bar',\n    data: {\n      labels: label,\n      datasets: [{\n        label: 'Categories',\n        data: Data,\n        backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n        borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)', 'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n        borderWidth: 1\n      }]\n    },\n    options: {\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"charts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, myChart));\n}","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/my-app/src/components/Chart.js"],"names":["React","Component","Chart","props","label","Data","i","DataSet","length","push","info","category","satcount","myChart","node","type","data","labels","datasets","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC,C,CACA;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAEnC,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,IAAI,GAAG,EAAX;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,OAAN,CAAcC,MAAlC,EAA0CF,CAAC,EAA3C,EAA+C;AAC7CF,IAAAA,KAAK,CAACK,IAAN,CAAWN,KAAK,CAACI,OAAN,CAAcD,CAAd,EAAiBI,IAAjB,CAAsBC,QAAjC;AACAN,IAAAA,IAAI,CAACI,IAAL,CAAUN,KAAK,CAACI,OAAN,CAAcD,CAAd,EAAiBI,IAAjB,CAAsBE,QAAhC;AACD;;AAGH,MAAIC,OAAO,GAAG,IAAIX,KAAJ,CAAUY,IAAV,EAAe;AACrBC,IAAAA,IAAI,EAAE,KADe;AAEzBC,IAAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAACb,KADL;AAEFc,MAAAA,QAAQ,EAAE,CAAC;AACPd,QAAAA,KAAK,EAAE,YADA;AAEPY,QAAAA,IAAI,EAAEX,IAFC;AAGPc,QAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,EAOb,yBAPa,EAQb,yBARa,EASb,yBATa,EAUb,yBAVa,EAWb,0BAXa,EAYb,yBAZa,CAHV;AAiBPC,QAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,EAOT,uBAPS,EAQT,uBARS,EAST,uBATS,EAUT,uBAVS,EAWT,wBAXS,EAYT,uBAZS,CAjBN;AA+BPC,QAAAA,WAAW,EAAE;AA/BN,OAAD;AAFR,KAFmB;AAsCzBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAE,CAAC;AACJC,UAAAA,KAAK,EAAE;AACHC,YAAAA,WAAW,EAAE;AADV;AADH,SAAD;AADH;AADH;AAtCgB,GAAf,CAAd;AAiDA,sBACI;AAAK,IAAA,SAAS,EAAE,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCb,OADD,CADF,CADJ;AAOC","sourcesContent":["import React,{ Component } from \"react\";\n//var Chart = require(\"chart.js\");\n\nexport default function Chart(props) {\n \n  var label = [];\n  var Data = [];\n  for (var i = 0; i < props.DataSet.length; i++) {\n    label.push(props.DataSet[i].info.category);\n    Data.push(props.DataSet[i].info.satcount);\n  }\n\n\nvar myChart = new Chart(node,{\n        type: 'bar',\n    data: {\n        labels:label,\n        datasets: [{\n            label: 'Categories',\n            data: Data,\n            backgroundColor: [\n                'rgba(255, 99, 132, 0.2)',\n                'rgba(54, 162, 235, 0.2)',\n                'rgba(255, 206, 86, 0.2)',\n                'rgba(75, 192, 192, 0.2)',\n                'rgba(153, 102, 255, 0.2)',\n                'rgba(255, 159, 64, 0.2)',\n                'rgba(255, 99, 132, 0.2)',\n                'rgba(54, 162, 235, 0.2)',\n                'rgba(255, 206, 86, 0.2)',\n                'rgba(75, 192, 192, 0.2)',\n                'rgba(153, 102, 255, 0.2)',\n                'rgba(255, 159, 64, 0.2)'\n            ],\n            borderColor: [\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n                'rgba(75, 192, 192, 1)',\n                'rgba(153, 102, 255, 1)',\n                'rgba(255, 159, 64, 1)',\n                'rgba(255, 99, 132, 1)',\n                'rgba(54, 162, 235, 1)',\n                'rgba(255, 206, 86, 1)',\n                'rgba(75, 192, 192, 1)',\n                'rgba(153, 102, 255, 1)',\n                'rgba(255, 159, 64, 1)'\n            ],\n            borderWidth: 1\n        }]\n    },\n    options: {\n        scales: {\n            yAxes: [{\n                ticks: {\n                    beginAtZero: true\n                }\n            }]\n        }\n    }\n});\n\nreturn (\n    <div className ='charts'>\n      <canvas>\n      {myChart}\n      </canvas> \n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}