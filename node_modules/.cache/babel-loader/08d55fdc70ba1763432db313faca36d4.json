{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/my-app/src/components/nevents/NEtop.js\";\nimport React from \"react\"; // import { Doughnut } from \"react-chartjs-2\";\n\nimport { Bar } from \"react-chartjs-2\";\n\nclass NEtop extends React.Component {\n  render() {\n    let events = this.props.events;\n    let labels = events.map(event => event[0]);\n    let data = events.map(event => event[1]);\n    let total = this.props.total;\n    const state = {\n      labels: labels,\n      datasets: [{\n        backgroundColor: [\"#972f48\", \"#972f48\", \"#972f48\", \"#972f48\"],\n        hoverBackgroundColor: [\"#772249\", \"#772249\", \"#772249\", \"#772249\"],\n        hoverBorderColor: [\"#772249\", \"#772249\", \"#772249\", \"#772249\"],\n        hoverBorderWidth: 0,\n        borderWidth: 0,\n        barPercentage: 0.2,\n        data: data\n      }]\n    };\n    const options = {\n      maintainAspectRatio: false,\n      title: {\n        display: true,\n        text: \"Most prevalent event types\",\n        position: \"bottom\"\n      },\n      legend: {\n        display: false // position: \"right\",\n\n      }\n    }; //Plugin for text in the middle : https://jsfiddle.net/cmyker/ooxdL2vj/\n    //https://www.chartjs.org/docs/latest/developers/plugins.html\n    // const plugin = [\n    //   {\n    //     beforeDraw: function (chart) {\n    //       var width = chart.chart.width,\n    //         height = chart.chart.height,\n    //         ctx = chart.chart.ctx;\n    //       ctx.restore();\n    //       var fontSize = (height / 114).toFixed(2);\n    //       ctx.font = fontSize + \"em sans-serif\";\n    //       ctx.textBaseline = \"middle\";\n    //       ctx.fillStyle = \"#972f48\";\n    //       var text = count.toString(),\n    //         textX = Math.round((width - ctx.measureText(text).width) / 2),\n    //         textY = height / 2;\n    //       ctx.fillText(text, textX, textY);\n    //       ctx.save();\n    //     },\n    //   },\n    // ];\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Bar, {\n      data: state,\n      options: options\n      /*plugins={plugin} */\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default NEtop;","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/my-app/src/components/nevents/NEtop.js"],"names":["React","Bar","NEtop","Component","render","events","props","labels","map","event","data","total","state","datasets","backgroundColor","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","borderWidth","barPercentage","options","maintainAspectRatio","title","display","text","position","legend"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAClCC,EAAAA,MAAM,GAAG;AACP,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWD,MAAxB;AACA,QAAIE,MAAM,GAAGF,MAAM,CAACG,GAAP,CAAYC,KAAD,IAAWA,KAAK,CAAC,CAAD,CAA3B,CAAb;AACA,QAAIC,IAAI,GAAGL,MAAM,CAACG,GAAP,CAAYC,KAAD,IAAWA,KAAK,CAAC,CAAD,CAA3B,CAAX;AACA,QAAIE,KAAK,GAAG,KAAKL,KAAL,CAAWK,KAAvB;AACA,UAAMC,KAAK,GAAG;AACZL,MAAAA,MAAM,EAAEA,MADI;AAEZM,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,eAAe,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CADnB;AAEEC,QAAAA,oBAAoB,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAFxB;AAGEC,QAAAA,gBAAgB,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAHpB;AAIEC,QAAAA,gBAAgB,EAAE,CAJpB;AAKEC,QAAAA,WAAW,EAAE,CALf;AAMEC,QAAAA,aAAa,EAAE,GANjB;AAOET,QAAAA,IAAI,EAAEA;AAPR,OADQ;AAFE,KAAd;AAeA,UAAMU,OAAO,GAAG;AACdC,MAAAA,mBAAmB,EAAE,KADP;AAEdC,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,IADJ;AAELC,QAAAA,IAAI,EAAE,4BAFD;AAGLC,QAAAA,QAAQ,EAAE;AAHL,OAFO;AAOdC,MAAAA,MAAM,EAAE;AACNH,QAAAA,OAAO,EAAE,KADH,CAEN;;AAFM;AAPM,KAAhB,CApBO,CAiCP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAM,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAEX,KAAX;AAAkB,MAAA,OAAO,EAAEQ;AAAS;AAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN,CADF;AAGD;;AA9DiC;;AAgEpC,eAAelB,KAAf","sourcesContent":["import React from \"react\";\n// import { Doughnut } from \"react-chartjs-2\";\nimport { Bar } from \"react-chartjs-2\";\n\nclass NEtop extends React.Component {\n  render() {\n    let events = this.props.events;\n    let labels = events.map((event) => event[0]);\n    let data = events.map((event) => event[1]);\n    let total = this.props.total;\n    const state = {\n      labels: labels,\n      datasets: [\n        {\n          backgroundColor: [\"#972f48\", \"#972f48\", \"#972f48\", \"#972f48\"],\n          hoverBackgroundColor: [\"#772249\", \"#772249\", \"#772249\", \"#772249\"],\n          hoverBorderColor: [\"#772249\", \"#772249\", \"#772249\", \"#772249\"],\n          hoverBorderWidth: 0,\n          borderWidth: 0,\n          barPercentage: 0.2,\n          data: data,\n        },\n      ],\n    };\n\n    const options = {\n      maintainAspectRatio: false,\n      title: {\n        display: true,\n        text: \"Most prevalent event types\",\n        position: \"bottom\",\n      },\n      legend: {\n        display: false,\n        // position: \"right\",\n      },\n    };\n\n    //Plugin for text in the middle : https://jsfiddle.net/cmyker/ooxdL2vj/\n    //https://www.chartjs.org/docs/latest/developers/plugins.html\n    // const plugin = [\n    //   {\n    //     beforeDraw: function (chart) {\n    //       var width = chart.chart.width,\n    //         height = chart.chart.height,\n    //         ctx = chart.chart.ctx;\n\n    //       ctx.restore();\n    //       var fontSize = (height / 114).toFixed(2);\n    //       ctx.font = fontSize + \"em sans-serif\";\n    //       ctx.textBaseline = \"middle\";\n    //       ctx.fillStyle = \"#972f48\";\n\n    //       var text = count.toString(),\n    //         textX = Math.round((width - ctx.measureText(text).width) / 2),\n    //         textY = height / 2;\n\n    //       ctx.fillText(text, textX, textY);\n    //       ctx.save();\n    //     },\n    //   },\n    // ];\n\n    return (\n      <div>{<Bar data={state} options={options} /*plugins={plugin} */ />}</div>\n    );\n  }\n}\nexport default NEtop;\n"]},"metadata":{},"sourceType":"module"}