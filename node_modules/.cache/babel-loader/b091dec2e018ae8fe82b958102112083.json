{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/my-app/src/components/Landing.js\";\nimport React from \"react\";\nimport Slider from \"./SliderImage\";\n\nclass Landing extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      imgtags: []\n    };\n  }\n\n  componentDidMount() {\n    const NASA_API_KEY = encodeURIComponent(process.env.REACT_APP_NE_API_KEY);\n    const latest = new Date();\n    latest.setDate(latest.getDate() - 1);\n\n    function pad(s) {\n      return s < 10 ? \"0\" + s : s;\n    }\n\n    const latest_string = [latest.getFullYear(), pad(latest.getMonth() + 1), pad(latest.getDate())].join(\"-\");\n    const image_dates = [latest.getFullYear(), pad(latest.getMonth() + 1), pad(latest.getDate())].join(\"/\");\n    let images = []; // let l_imgtags = [];\n\n    console.log(\"Landing\");\n    fetch(`https://api.nasa.gov/EPIC/api/natural/date/${encodeURIComponent(latest_string)}?api_key=${encodeURIComponent(NASA_API_KEY)}`).then(response => response.json()).then(data => {\n      for (let d of data) {\n        console.log(d);\n        images.push(d.image);\n      }\n    }).then(() => {\n      let l_imgtags = images.map(i => \"https://epic.gsfc.nasa.gov/archive/natural/\" + image_dates + \"/png/\" + i + \".png\");\n      return l_imgtags;\n    }).then(l_imgtags => {\n      console.log(\"inside fetch chain\");\n      this.setState({\n        imgtags: l_imgtags\n      });\n      console.log(this.state.imgtags);\n    }).catch(error => {\n      console.log(\"Request failed: \", error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, \"LANDING:\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Slider, {\n      images: this.state.imgtags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 8\n      }\n    }));\n  }\n\n}\n\nexport default Landing;","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/my-app/src/components/Landing.js"],"names":["React","Slider","Landing","Component","constructor","state","imgtags","componentDidMount","NASA_API_KEY","encodeURIComponent","process","env","REACT_APP_NE_API_KEY","latest","Date","setDate","getDate","pad","s","latest_string","getFullYear","getMonth","join","image_dates","images","console","log","fetch","then","response","json","data","d","push","image","l_imgtags","map","i","setState","catch","error","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,YAAY,GAAGC,kBAAkB,CAACC,OAAO,CAACC,GAAR,CAAYC,oBAAb,CAAvC;AACA,UAAMC,MAAM,GAAG,IAAIC,IAAJ,EAAf;AACAD,IAAAA,MAAM,CAACE,OAAP,CAAeF,MAAM,CAACG,OAAP,KAAmB,CAAlC;;AAEA,aAASC,GAAT,CAAaC,CAAb,EAAgB;AACd,aAAOA,CAAC,GAAG,EAAJ,GAAS,MAAMA,CAAf,GAAmBA,CAA1B;AACD;;AAED,UAAMC,aAAa,GAAG,CACpBN,MAAM,CAACO,WAAP,EADoB,EAEpBH,GAAG,CAACJ,MAAM,CAACQ,QAAP,KAAoB,CAArB,CAFiB,EAGpBJ,GAAG,CAACJ,MAAM,CAACG,OAAP,EAAD,CAHiB,EAIpBM,IAJoB,CAIf,GAJe,CAAtB;AAMA,UAAMC,WAAW,GAAG,CAClBV,MAAM,CAACO,WAAP,EADkB,EAElBH,GAAG,CAACJ,MAAM,CAACQ,QAAP,KAAoB,CAArB,CAFe,EAGlBJ,GAAG,CAACJ,MAAM,CAACG,OAAP,EAAD,CAHe,EAIlBM,IAJkB,CAIb,GAJa,CAApB;AAMA,QAAIE,MAAM,GAAG,EAAb,CArBkB,CAsBlB;;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAC,IAAAA,KAAK,CACF,8CAA6ClB,kBAAkB,CAC9DU,aAD8D,CAE9D,YAAWV,kBAAkB,CAACD,YAAD,CAAe,EAH3C,CAAL,CAKGoB,IALH,CAKSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EALtB,EAMGF,IANH,CAMSG,IAAD,IAAU;AACd,WAAK,IAAIC,CAAT,IAAcD,IAAd,EAAoB;AAClBN,QAAAA,OAAO,CAACC,GAAR,CAAYM,CAAZ;AACAR,QAAAA,MAAM,CAACS,IAAP,CAAYD,CAAC,CAACE,KAAd;AACD;AACF,KAXH,EAYGN,IAZH,CAYQ,MAAM;AACV,UAAIO,SAAS,GAAGX,MAAM,CAACY,GAAP,CAAYC,CAAD,IACrB,gDACAd,WADA,GAEA,OAFA,GAGAc,CAHA,GAIA,MALU,CAAhB;AAQA,aAAOF,SAAP;AACD,KAtBH,EAuBGP,IAvBH,CAuBSO,SAAD,IAAe;AACnBV,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,WAAKY,QAAL,CAAc;AAAEhC,QAAAA,OAAO,EAAE6B;AAAX,OAAd;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAWC,OAAvB;AACD,KA3BH,EA4BGiC,KA5BH,CA4BUC,KAAD,IAAW;AAChBf,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCc,KAAhC;AACD,KA9BH;AA+BD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGC,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAG,KAAKpC,KAAL,CAAWC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,CADF;AAOD;;AA1EmC;;AA6EtC,eAAeJ,OAAf","sourcesContent":["import React from \"react\";\nimport Slider from \"./SliderImage\"\n\nclass Landing extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      imgtags: [],\n    };\n  }\n\n  componentDidMount() {\n    const NASA_API_KEY = encodeURIComponent(process.env.REACT_APP_NE_API_KEY);\n    const latest = new Date();\n    latest.setDate(latest.getDate() - 1);\n\n    function pad(s) {\n      return s < 10 ? \"0\" + s : s;\n    }\n\n    const latest_string = [\n      latest.getFullYear(),\n      pad(latest.getMonth() + 1),\n      pad(latest.getDate()),\n    ].join(\"-\");\n\n    const image_dates = [\n      latest.getFullYear(),\n      pad(latest.getMonth() + 1),\n      pad(latest.getDate()),\n    ].join(\"/\");\n\n    let images = [];\n    // let l_imgtags = [];\n\n    console.log(\"Landing\");\n    fetch(\n      `https://api.nasa.gov/EPIC/api/natural/date/${encodeURIComponent(\n        latest_string\n      )}?api_key=${encodeURIComponent(NASA_API_KEY)}`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        for (let d of data) {\n          console.log(d)\n          images.push(d.image);\n        }\n      })\n      .then(() => {\n        let l_imgtags = images.map((i) => (         \n              \"https://epic.gsfc.nasa.gov/archive/natural/\" +\n              image_dates +\n              \"/png/\" +\n              i +\n              \".png\"        \n          \n        ));\n        return l_imgtags;\n      })\n      .then((l_imgtags) => {\n        console.log(\"inside fetch chain\");\n        this.setState({ imgtags: l_imgtags });\n        console.log(this.state.imgtags);\n      })\n      .catch((error) => {\n        console.log(\"Request failed: \", error);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        LANDING:\n        <br />\n       <Slider images ={this.state.imgtags}/>\n      </div>\n    );\n  }\n}\n\nexport default Landing;\n"]},"metadata":{},"sourceType":"module"}