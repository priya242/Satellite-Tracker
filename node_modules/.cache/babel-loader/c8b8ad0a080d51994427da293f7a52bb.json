{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/my-app/src/components/BarChart.js\";\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nexport default function BarChart(props) {\n  var years = [];\n\n  if (props.DataSets.above) {\n    var satData = props.DataSets.above;\n\n    for (var i = 0; i < satData.length; i++) {\n      var date = satData[i].launchDate;\n      var dataObject = new Date(date);\n\n      if (dataObject.getFullYear() > 2010) {\n        years.push(dataObject.getFullYear());\n      }\n    }\n  }\n\n  var yearlyData = years.reduce(function (object, satCount) {\n    if (!object[satCount]) {\n      object[satCount] = 1;\n    } else {\n      object[satCount]++;\n    }\n\n    return object;\n  }, {});\n  Object.entries(yearlyData).forEach(([key, value]) => console.log(`${key}: ${value}`));\n  const data = {\n    labels: Object.keys(yearlyData),\n    datasets: [{\n      label: \"Satellite Launch \",\n      backgroundColor: \"rgba(255, 215, 0,0.8)\",\n      borderColor: \"rgba(0 ,0 ,238,1)\",\n      borderWidth: 1,\n      hoverBackgroundColor: \"rgba(255, 215, 0,0.4)\",\n      hoverBorderColor: \"rgba(0 ,0 ,238,1)\",\n      data: Object.values(yearlyData)\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"barcharts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Active Satellites\"), /*#__PURE__*/React.createElement(Bar, {\n    height: 180,\n    data: data,\n    options: {\n      maintainAspectRatio: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/my-app/src/components/BarChart.js"],"names":["React","Bar","BarChart","props","years","DataSets","above","satData","i","length","date","launchDate","dataObject","Date","getFullYear","push","yearlyData","reduce","object","satCount","Object","entries","forEach","key","value","console","log","data","labels","keys","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","values","maintainAspectRatio"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,MAAIC,KAAK,GAAG,EAAZ;;AACA,MAAID,KAAK,CAACE,QAAN,CAAeC,KAAnB,EAA0B;AACxB,QAAIC,OAAO,GAAGJ,KAAK,CAACE,QAAN,CAAeC,KAA7B;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,OAAO,CAACE,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,UAAIE,IAAI,GAAGH,OAAO,CAACC,CAAD,CAAP,CAAWG,UAAtB;AACA,UAAIC,UAAU,GAAG,IAAIC,IAAJ,CAASH,IAAT,CAAjB;;AACA,UAAIE,UAAU,CAACE,WAAX,KAA2B,IAA/B,EAAqC;AACnCV,QAAAA,KAAK,CAACW,IAAN,CAAWH,UAAU,CAACE,WAAX,EAAX;AACD;AACF;AACF;;AACD,MAAIE,UAAU,GAAGZ,KAAK,CAACa,MAAN,CAAa,UAAUC,MAAV,EAAkBC,QAAlB,EAA4B;AACxD,QAAI,CAACD,MAAM,CAACC,QAAD,CAAX,EAAuB;AACrBD,MAAAA,MAAM,CAACC,QAAD,CAAN,GAAmB,CAAnB;AACD,KAFD,MAEO;AACLD,MAAAA,MAAM,CAACC,QAAD,CAAN;AACD;;AACD,WAAOD,MAAP;AACD,GAPgB,EAOd,EAPc,CAAjB;AAQAE,EAAAA,MAAM,CAACC,OAAP,CAAeL,UAAf,EAA2BM,OAA3B,CAAmC,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KACjCC,OAAO,CAACC,GAAR,CAAa,GAAEH,GAAI,KAAIC,KAAM,EAA7B,CADF;AAGA,QAAMG,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAER,MAAM,CAACS,IAAP,CAAYb,UAAZ,CADG;AAEXc,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,mBADT;AAEEC,MAAAA,eAAe,EAAE,uBAFnB;AAGEC,MAAAA,WAAW,EAAE,mBAHf;AAIEC,MAAAA,WAAW,EAAE,CAJf;AAKEC,MAAAA,oBAAoB,EAAE,uBALxB;AAMEC,MAAAA,gBAAgB,EAAE,mBANpB;AAOET,MAAAA,IAAI,EAAEP,MAAM,CAACiB,MAAP,CAAcrB,UAAd;AAPR,KADQ;AAFC,GAAb;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE,oBAAC,GAAD;AACE,IAAA,MAAM,EAAE,GADV;AAEE,IAAA,IAAI,EAAEW,IAFR;AAGE,IAAA,OAAO,EAAE;AACPW,MAAAA,mBAAmB,EAAC;AADb,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAaD","sourcesContent":["import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nexport default function BarChart(props) {\n  var years = [];\n  if (props.DataSets.above) {\n    var satData = props.DataSets.above;\n    for (var i = 0; i < satData.length; i++) {\n      var date = satData[i].launchDate;\n      var dataObject = new Date(date);\n      if (dataObject.getFullYear() > 2010) {\n        years.push(dataObject.getFullYear());\n      }\n    }\n  }\n  var yearlyData = years.reduce(function (object, satCount) {\n    if (!object[satCount]) {\n      object[satCount] = 1;\n    } else {\n      object[satCount]++;\n    }\n    return object;\n  }, {});\n  Object.entries(yearlyData).forEach(([key, value]) =>\n    console.log(`${key}: ${value}`)\n  );\n  const data = {\n    labels: Object.keys(yearlyData),\n    datasets: [\n      {\n        label: \"Satellite Launch \",\n        backgroundColor: \"rgba(255, 215, 0,0.8)\",\n        borderColor: \"rgba(0 ,0 ,238,1)\",\n        borderWidth: 1,\n        hoverBackgroundColor: \"rgba(255, 215, 0,0.4)\",\n        hoverBorderColor: \"rgba(0 ,0 ,238,1)\",\n        data: Object.values(yearlyData),\n      }\n    ],\n  };\n  \n  return (\n    <div className=\"barcharts\">\n      <h1>Active Satellites</h1>\n      <Bar\n        height={180}\n        data={data}\n        options={{\n          maintainAspectRatio:false\n        }}\n        \n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}