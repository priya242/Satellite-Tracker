{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/my-app/src/components/satinfo/WorldMap.js\";\nimport React from \"react\"; //import { render } from \"react-dom\";\n\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport mapDataWorld from \"./sat_mapDataWorld\";\n\nclass WorldMap extends React.Component {\n  // Load Highcharts Maps as a module\n  render() {\n    require(\"highcharts/modules/map\")(Highcharts);\n\n    const tmpdata = this.props.WorldDataSet;\n    const map = mapDataWorld;\n    var data = [];\n\n    for (var i = 0; i < tmpdata.length; i++) {\n      let wd = {};\n      wd[\"name\"] = tmpdata[i].satname;\n      wd[\"lat\"] = tmpdata[i].satlat;\n      wd[\"lon\"] = tmpdata[i].satlng;\n      data.push(wd);\n    }\n\n    console.log(data); // Create the chart\n\n    const mapOptions = {\n      chart: {\n        backgroundColor: {\n          radialGradient: {\n            x1: 0,\n            y1: 0,\n            x2: 1,\n            y2: 1\n          },\n          stops: [[0, \"#323e74\"], [1, \"#12064b\"]],\n          opacity: 0.5\n        },\n        plotBorderColor: \"#606063\"\n      },\n      title: {\n        text: \"\"\n      },\n      subtitle: {\n        text: \"\"\n      },\n\n      /**  colorAxis: {\n      min: 0,\n      stops: [\n        [0.2, \"#0000FF\"],\n        [0.4, \"#1E90FF)\"],\n        [0.6, \"#00BFFF\"],\n        [0.8, \"#87CEFF\"],\n        [0.2, \"B0E2FF\"],\n      ],\n      }, **/\n      tooltip: {\n        pointFormat: \"{point.name}<br>\" + \"Lat: {point.lat} \" + \"Lon: {point.lon}<br>\",\n        //backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n        backgroundColor: \"rgb(50, 62, 116)\",\n        //backgroundImage:\"radial-gradient(rgb(50, 62, 116), rgb(18, 6, 75))\",\n        style: {\n          color: \"#F0F0F0\"\n        }\n      },\n      series: [{\n        name: \"Basemap\",\n        mapData: map,\n        borderColor: \"#A0A0A0\",\n        nullColor: \"#4c4cff\",\n        showInLegend: false\n      }, {\n        type: \"mappoint\",\n        turboThreshold: 3300,\n        name: \"Satellites\",\n        color: \"#C29710\",\n        dataLabels: {\n          enabled: false,\n          format: \"{point.name}\",\n          color: \"#F0F0F3\"\n        },\n        marker: {\n          lineColor: \"#333\"\n        },\n        data: data,\n        showInLegend: false\n      }]\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid-item4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(HighchartsReact, {\n      options: mapOptions,\n      constructorType: \"mapChart\",\n      highcharts: Highcharts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default WorldMap;","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/my-app/src/components/satinfo/WorldMap.js"],"names":["React","Highcharts","HighchartsReact","mapDataWorld","WorldMap","Component","render","require","tmpdata","props","WorldDataSet","map","data","i","length","wd","satname","satlat","satlng","push","console","log","mapOptions","chart","backgroundColor","radialGradient","x1","y1","x2","y2","stops","opacity","plotBorderColor","title","text","subtitle","tooltip","pointFormat","style","color","series","name","mapData","borderColor","nullColor","showInLegend","type","turboThreshold","dataLabels","enabled","format","marker","lineColor"],"mappings":"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","sourcesContent":["import React from \"react\";\n//import { render } from \"react-dom\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport mapDataWorld from \"./sat_mapDataWorld\";\nclass WorldMap extends React.Component {\n  // Load Highcharts Maps as a module\n  render() {\n    require(\"highcharts/modules/map\")(Highcharts);\n    const tmpdata = this.props.WorldDataSet;\n    const map = mapDataWorld;\n    var data = [];\n\n    for (var i = 0; i < tmpdata.length; i++) {\n      let wd = {};\n      wd[\"name\"] = tmpdata[i].satname;\n      wd[\"lat\"] = tmpdata[i].satlat;\n      wd[\"lon\"] = tmpdata[i].satlng;\n      data.push(wd);\n    }\n    console.log(data);\n    // Create the chart\n    const mapOptions = {\n      chart: {\n        backgroundColor: {\n          radialGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n          stops: [\n            [0, \"#323e74\"],\n            [1, \"#12064b\"],\n          \n          ],\n          opacity:0.5,\n        },\n        plotBorderColor: \"#606063\",\n      },\n      title: {\n        text: \"\",\n      },\n      subtitle:{\n        text:\"\",\n      },\n      /**  colorAxis: {\n      min: 0,\n      stops: [\n        [0.2, \"#0000FF\"],\n        [0.4, \"#1E90FF)\"],\n        [0.6, \"#00BFFF\"],\n        [0.8, \"#87CEFF\"],\n        [0.2, \"B0E2FF\"],\n      ],\n    }, **/\n\n      tooltip: {\n        pointFormat:\n          \"{point.name}<br>\" +\n           \"Lat: {point.lat} \" + \n           \"Lon: {point.lon}<br>\",\n           //backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n           backgroundColor:\"rgb(50, 62, 116)\",\n           //backgroundImage:\"radial-gradient(rgb(50, 62, 116), rgb(18, 6, 75))\",\n        style: {\n          color: \"#F0F0F0\",\n        },\n      },\n\n\n      series: [\n        {\n          name: \"Basemap\",\n          mapData: map,\n          borderColor: \"#A0A0A0\",\n          nullColor: \"#4c4cff\",\n          showInLegend: false,\n        },\n        {\n          type: \"mappoint\",\n          turboThreshold: 3300,\n          name: \"Satellites\",\n          color: \"#C29710\",\n          dataLabels: {\n            enabled: false,\n            format: \"{point.name}\",\n            color: \"#F0F0F3\",\n          },\n          marker: {\n            lineColor: \"#333\",\n          },\n          data: data,\n          showInLegend: false,\n        },\n      ],\n    }; \n      return (\n        <div className=\"grid-item4\">\n          <HighchartsReact\n            options={mapOptions}\n            constructorType={\"mapChart\"}\n            highcharts={Highcharts}\n          />\n        </div>\n      );\n    }\n  }\n  export default WorldMap;\n    \n   \n    \n"]},"metadata":{},"sourceType":"module"}