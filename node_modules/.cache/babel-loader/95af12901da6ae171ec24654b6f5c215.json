{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/my-app/src/components/satinfo/WorldMap.js\";\nimport React from \"react\"; //import { render } from \"react-dom\";\n\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport mapDataWorld from \"./mapDataWorld\";\n\nclass WorldMap extends React.Component {\n  // Load Highcharts Maps as a module\n  render() {\n    require(\"highcharts/modules/map\")(Highcharts);\n\n    const tmpdata = this.props.WorldDataSet;\n    var data = [];\n\n    for (var i = 0; i < tmpdata.length; i++) {\n      let wd = {};\n      wd[\"name\"] = tmpdata[i].satname;\n      wd[\"lat\"] = tmpdata[i].satlat;\n      wd[\"lon\"] = tmpdata[i].satlng;\n      data.push(wd);\n    }\n\n    console.log(data); // Create the chart\n\n    const mapOptions = {\n      title: {\n        text: ''\n      },\n      colorAxis: {\n        min: 0,\n        stops: [[0.4, '#ffff00'], [0.65, '#bfff00'], [1, '\t#40ff00']]\n      },\n      series: [{\n        mapData: mapDataWorld,\n        name: 'Satellites',\n        data: [['ae', 37], ['af', 44], ['am', 20], ['az', 19], ['bd', 9], ['bh', 12], ['bn', 43], ['bt', 26], ['cn', 70], ['cnm', 33]]\n      }]\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid-item4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(HighchartsReact, {\n      options: mapOptions,\n      constructorType: \"mapChart\",\n      highcharts: Highcharts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default WorldMap;\n/** const mapOptions = {\n   chart: {\n     backgroundColor: {\n       linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n       stops: [\n         [0, \"#2a2a2b\"],\n         [1, \"#3e3e40\"],\n       ],\n     },\n     plotBorderColor: \"#606063\",\n   },\n   title: {\n     text: \"\",\n   },\n   /**  colorAxis: {\n   min: 0,\n   stops: [\n     [0.2, \"#0000FF\"],\n     [0.4, \"#1E90FF)\"],\n     [0.6, \"#00BFFF\"],\n     [0.8, \"#87CEFF\"],\n     [0.2, \"B0E2FF\"],\n   ],\n },\n    tooltip: {\n     headerFormat:'',\n     pointFormat:\n       \"{point.name}<br>\" + \"Lat: {point.lat} \" + \"Lon: {point.lon}<br>\",\n   },\n    mapNavigation: {\n     enabled: true,\n   },\n    series: [\n     {\n       mapData: mapDataWorld,\n       name: \"Basemap\",\n       borderColor: \"#A0A0A0\",\n       nullColor: \"rgba(200, 200, 200, 0.3)\",\n       showInLegend: false,\n     },\n     {\n       type: \"mappoint\",\n       name: \"Satellites\",\n       color: \"#f9ef0e\",\n       dataLabels: {\n         enabled: true,\n         format: \"{point.name}\",\n         color: \"#F0F0F3\",\n       },\n       marker: {\n         lineColor: \"#333\",\n       },\n       //data: data,\n       showInLegend: false,\n     },\n   ],\n }; **/","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/my-app/src/components/satinfo/WorldMap.js"],"names":["React","Highcharts","HighchartsReact","mapDataWorld","WorldMap","Component","render","require","tmpdata","props","WorldDataSet","data","i","length","wd","satname","satlat","satlng","push","console","log","mapOptions","title","text","colorAxis","min","stops","series","mapData","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AACA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AACrC;AACAC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAAC,wBAAD,CAAP,CAAkCN,UAAlC;;AACA,UAAMO,OAAO,GAAG,KAAKC,KAAL,CAAWC,YAA3B;AACA,QAAIC,IAAI,GAAG,EAAX;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAAO,CAACK,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,UAAIE,EAAE,GAAG,EAAT;AACAA,MAAAA,EAAE,CAAC,MAAD,CAAF,GAAaN,OAAO,CAACI,CAAD,CAAP,CAAWG,OAAxB;AACAD,MAAAA,EAAE,CAAC,KAAD,CAAF,GAAYN,OAAO,CAACI,CAAD,CAAP,CAAWI,MAAvB;AACAF,MAAAA,EAAE,CAAC,KAAD,CAAF,GAAYN,OAAO,CAACI,CAAD,CAAP,CAAWK,MAAvB;AACAN,MAAAA,IAAI,CAACO,IAAL,CAAUJ,EAAV;AACD;;AACDK,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ,EAZO,CAaP;;AACA,UAAMU,UAAU,GAAG;AACjBC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE;AADD,OADU;AAIjBC,MAAAA,SAAS,EAAE;AACTC,QAAAA,GAAG,EAAE,CADI;AAETC,QAAAA,KAAK,EAAE,CAAC,CAAC,GAAD,EAAM,SAAN,CAAD,EAAmB,CAAC,IAAD,EAAO,SAAP,CAAnB,EAAsC,CAAC,CAAD,EAAI,UAAJ,CAAtC;AAFE,OAJM;AASjBC,MAAAA,MAAM,EAAE,CACN;AACEC,QAAAA,OAAO,EAAEzB,YADX;AAEE0B,QAAAA,IAAI,EAAE,YAFR;AAGElB,QAAAA,IAAI,EAAE,CAAC,CAAC,IAAD,EAAO,EAAP,CAAD,EACN,CAAC,IAAD,EAAO,EAAP,CADM,EAEN,CAAC,IAAD,EAAO,EAAP,CAFM,EAGN,CAAC,IAAD,EAAO,EAAP,CAHM,EAIN,CAAC,IAAD,EAAO,CAAP,CAJM,EAKN,CAAC,IAAD,EAAO,EAAP,CALM,EAMN,CAAC,IAAD,EAAO,EAAP,CANM,EAON,CAAC,IAAD,EAAO,EAAP,CAPM,EAQN,CAAC,IAAD,EAAO,EAAP,CARM,EASN,CAAC,KAAD,EAAQ,EAAR,CATM;AAHR,OADM;AATS,KAAnB;AA2BE,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AACE,MAAA,OAAO,EAAEU,UADX;AAEE,MAAA,eAAe,EAAE,UAFnB;AAGE,MAAA,UAAU,EAAEpB,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AASD;;AApDkC;;AAsDrC,eAAeG,QAAf;AAEC","sourcesContent":["import React from \"react\";\n//import { render } from \"react-dom\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport mapDataWorld from \"./mapDataWorld\";\nclass WorldMap extends React.Component {\n  // Load Highcharts Maps as a module\n  render() {\n    require(\"highcharts/modules/map\")(Highcharts);\n    const tmpdata = this.props.WorldDataSet;\n    var data = [];\n\n    for (var i = 0; i < tmpdata.length; i++) {\n      let wd = {};\n      wd[\"name\"] = tmpdata[i].satname;\n      wd[\"lat\"] = tmpdata[i].satlat;\n      wd[\"lon\"] = tmpdata[i].satlng;\n      data.push(wd);\n    }\n    console.log(data);\n    // Create the chart\n    const mapOptions = {\n      title: {\n        text: ''\n      },\n      colorAxis: {\n        min: 0,\n        stops: [[0.4, '#ffff00'], [0.65, '#bfff00'], [1, '\t#40ff00']]\n      },\n    \n      series: [\n        {\n          mapData: mapDataWorld,\n          name: 'Satellites',\n          data: [['ae', 37],\n          ['af', 44],\n          ['am', 20],\n          ['az', 19],\n          ['bd', 9],\n          ['bh', 12],\n          ['bn', 43],\n          ['bt', 26],\n          ['cn', 70],\n          ['cnm', 33],]\n        }\n      ]\n    };\n\n      return (\n        <div className=\"grid-item4\">\n          <HighchartsReact\n            options={mapOptions}\n            constructorType={\"mapChart\"}\n            highcharts={Highcharts}\n          />\n        </div>\n      );\n    }\n  }\n  export default WorldMap;\n    \n   /** const mapOptions = {\n      chart: {\n        backgroundColor: {\n          linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n          stops: [\n            [0, \"#2a2a2b\"],\n            [1, \"#3e3e40\"],\n          ],\n        },\n        plotBorderColor: \"#606063\",\n      },\n      title: {\n        text: \"\",\n      },\n      /**  colorAxis: {\n      min: 0,\n      stops: [\n        [0.2, \"#0000FF\"],\n        [0.4, \"#1E90FF)\"],\n        [0.6, \"#00BFFF\"],\n        [0.8, \"#87CEFF\"],\n        [0.2, \"B0E2FF\"],\n      ],\n    },\n\n      tooltip: {\n        headerFormat:'',\n        pointFormat:\n          \"{point.name}<br>\" + \"Lat: {point.lat} \" + \"Lon: {point.lon}<br>\",\n      },\n\n      mapNavigation: {\n        enabled: true,\n      },\n\n      series: [\n        {\n          mapData: mapDataWorld,\n          name: \"Basemap\",\n          borderColor: \"#A0A0A0\",\n          nullColor: \"rgba(200, 200, 200, 0.3)\",\n          showInLegend: false,\n        },\n        {\n          type: \"mappoint\",\n          name: \"Satellites\",\n          color: \"#f9ef0e\",\n          dataLabels: {\n            enabled: true,\n            format: \"{point.name}\",\n            color: \"#F0F0F3\",\n          },\n          marker: {\n            lineColor: \"#333\",\n          },\n          //data: data,\n          showInLegend: false,\n        },\n      ],\n    }; **/\n\n    \n"]},"metadata":{},"sourceType":"module"}