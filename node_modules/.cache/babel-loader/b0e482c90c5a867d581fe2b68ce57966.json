{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/my-app/src/components/WorldMap.js\";\nimport React from \"react\"; //import { render } from \"react-dom\";\n\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport mapDataWorld from \"./mapDataWorld\";\n\nclass WorldMap extends React.Component {\n  // Load Highcharts Maps as a module\n  render() {\n    require(\"highcharts/modules/map\")(Highcharts);\n\n    const tmpdata = this.props.WorldDataSet;\n    const map = mapDataWorld;\n    var data = [];\n    var name = [];\n\n    for (var i = 0; i < tmpdata.length; i++) {\n      name = tmpdata[i].satname; //wd[\"lat\"] = tmpdata[i].satlat;\n      // wd[\"lon\"] = tmpdata[i].satlng;\n\n      data.push(name);\n    }\n\n    console.log(data); // Create the chart\n\n    const mapOptions = {\n      chart: {\n        backgroundColor: {\n          linearGradient: {\n            x1: 0,\n            y1: 0,\n            x2: 1,\n            y2: 1\n          },\n          stops: [[0, \"#2a2a2b\"], [1, \"#3e3e40\"]]\n        },\n        plotBorderColor: \"#606063\"\n      },\n      title: {\n        text: \"\"\n      },\n\n      /**  colorAxis: {\n         min: 0,\n         stops: [\n           [0.2, \"#0000FF\"],\n           [0.4, \"#1E90FF)\"],\n           [0.6, \"#00BFFF\"],\n           [0.8, \"#87CEFF\"],\n           [0.2, \"B0E2FF\"],\n         ],\n       },**/\n      tooltip: {\n        pointFormat: \"{point.name}<br>\" + \"Lat: {point.lat} \" + \"Lon: {point.lon}<br>\",\n        backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n        style: {\n          color: \"#F0F0F0\"\n        }\n      },\n      mapNavigation: {\n        enabled: true\n      },\n      series: [{\n        mapData: map,\n        name: \"Satellites\",\n        borderColor: \"#A0A0A0\",\n        nullColor: \"rgba(200, 200, 200, 0.3)\",\n        showInLegend: false\n      }, {\n        type: \"mappoint\",\n        name: \"Satellite\",\n        color: \"#90ee7e\",\n        dataLabels: {\n          enabled: true,\n          format: \"{point.satname}\",\n          color: \"#F0F0F3\"\n        },\n        marker: {\n          lineColor: \"#333\"\n        },\n        data: data,\n        showInLegend: false\n      }]\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, \"Highmaps\"), /*#__PURE__*/React.createElement(HighchartsReact, {\n      options: mapOptions,\n      constructorType: \"mapChart\",\n      highcharts: Highcharts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default WorldMap;","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/my-app/src/components/WorldMap.js"],"names":["React","Highcharts","HighchartsReact","mapDataWorld","WorldMap","Component","render","require","tmpdata","props","WorldDataSet","map","data","name","i","length","satname","push","console","log","mapOptions","chart","backgroundColor","linearGradient","x1","y1","x2","y2","stops","plotBorderColor","title","text","tooltip","pointFormat","style","color","mapNavigation","enabled","series","mapData","borderColor","nullColor","showInLegend","type","dataLabels","format","marker","lineColor"],"mappings":"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","sourcesContent":["import React from \"react\";\n//import { render } from \"react-dom\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport mapDataWorld from \"./mapDataWorld\";\nclass WorldMap extends React.Component {\n  // Load Highcharts Maps as a module\n  render() {\n  require(\"highcharts/modules/map\")(Highcharts);\n  const tmpdata = this.props.WorldDataSet;\n  const map = mapDataWorld;\n  var data = [];\n  var name =[];\n  for(var i = 0; i < tmpdata.length; i++){\n    name = tmpdata[i].satname;\n    //wd[\"lat\"] = tmpdata[i].satlat;\n   // wd[\"lon\"] = tmpdata[i].satlng;\n    data.push(name);\n  }\n   console.log(data)\n  // Create the chart\n  const mapOptions = {\n    chart: {\n      backgroundColor: {\n        linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\n        stops: [\n          [0, \"#2a2a2b\"],\n          [1, \"#3e3e40\"],\n        ],\n      },\n      plotBorderColor: \"#606063\",\n    },\n    title: {\n      text: \"\",\n    },\n   /**  colorAxis: {\n      min: 0,\n      stops: [\n        [0.2, \"#0000FF\"],\n        [0.4, \"#1E90FF)\"],\n        [0.6, \"#00BFFF\"],\n        [0.8, \"#87CEFF\"],\n        [0.2, \"B0E2FF\"],\n      ],\n    },**/\n\n    tooltip: {\n      pointFormat:\n        \"{point.name}<br>\" +\n        \"Lat: {point.lat} \" +\n        \"Lon: {point.lon}<br>\",\n       \n      backgroundColor: \"rgba(0, 0, 0, 0.85)\",\n      style: {\n        color: \"#F0F0F0\",\n      },\n    },\n\n    mapNavigation: {\n      enabled: true,\n    },\n\n    series: [\n      {\n        mapData: map,\n        name: \"Satellites\",\n        borderColor: \"#A0A0A0\",\n        nullColor: \"rgba(200, 200, 200, 0.3)\",\n        showInLegend: false,\n        \n      },\n      {\n        type: \"mappoint\",\n        name: \"Satellite\",\n        color: \"#90ee7e\",\n        dataLabels: {\n          enabled: true,\n          format:\"{point.satname}\",\n          color: \"#F0F0F3\",\n        },\n        marker: {\n          lineColor: \"#333\",\n        },\n        data: data,\n        showInLegend: false,\n      },\n    ],\n  };\n\n  return (\n    <div>\n      <h1>Highmaps</h1>\n      <HighchartsReact\n        options={mapOptions}\n        constructorType={\"mapChart\"}\n        highcharts={Highcharts}\n      />\n    </div>\n  );\n}\n}\nexport default WorldMap;\n"]},"metadata":{},"sourceType":"module"}