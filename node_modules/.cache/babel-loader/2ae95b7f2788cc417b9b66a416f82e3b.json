{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/my-app/src/components/Landing.js\";\nimport React from \"react\";\nimport Slider from \"./SliderImage\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport NEvents from \"./NEvents\";\nimport SatInfo from \"./SatInfo\";\n\nclass Landing extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      imgtags: [],\n      imagedate: \"\"\n    };\n  }\n\n  componentDidMount() {\n    //const NASA_API_KEY = process.env.REACT_APP_NASA_API_KEY;\n    const latest = new Date();\n    latest.setDate(latest.getDate() - 2);\n\n    function pad(s) {\n      return s < 10 ? \"0\" + s : s;\n    }\n\n    let latest_string = [latest.getFullYear(), pad(latest.getMonth() + 1), pad(latest.getDate())].join(\"-\");\n    latest_string = \"2020-06-02\";\n    let image_dates = [latest.getFullYear(), pad(latest.getMonth() + 1), pad(latest.getDate())].join(\"/\");\n    console.log(image_dates[0]);\n    let images = [];\n    fetch(`https://api.nasa.gov/EPIC/api/natural/date/${encodeURIComponent(latest_string)}?api_key=twk4KeZwwqGPWJFY9ksFShKEyoDGimDlJAjwDH0z`).then(response => response.json()).then(data => {\n      for (let d of data) {\n        //console.log(d)\n        images.push(d.image);\n      }\n    }).then(() => {\n      let l_imgtags = images.map(i => \"https://epic.gsfc.nasa.gov/archive/natural/\" + image_dates + \"/png/\" + i + \".png\");\n      return l_imgtags;\n    }).then(l_imgtags => {\n      this.setState({\n        imgtags: l_imgtags,\n        imagedate: image_dates\n      });\n    }).catch(error => {\n      console.log(\"Request failed: \", error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"landing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"landing-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lgrid-item3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, \"Home\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/SatInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }, \"Satellite Information\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/NEvents\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }, \"Natural Events\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lgrid-item1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Slider, {\n      images: this.state.imgtags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, \"[This image was taken by NASA's EPIC camera onboard the NOAA DSCOVR on \", this.state.imagedate, \"]\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lgrid-item2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, \"Satellite Tracker\")))));\n  }\n\n}\n\nexport default Landing;","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/my-app/src/components/Landing.js"],"names":["React","Slider","BrowserRouter","Router","Switch","Route","Link","NEvents","SatInfo","Landing","Component","constructor","state","imgtags","imagedate","componentDidMount","latest","Date","setDate","getDate","pad","s","latest_string","getFullYear","getMonth","join","image_dates","console","log","images","fetch","encodeURIComponent","then","response","json","data","d","push","image","l_imgtags","map","i","setState","catch","error","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Slider from \"./SliderImage\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport NEvents from \"./NEvents\";\nimport SatInfo from \"./SatInfo\";\n\nclass Landing extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      imgtags: [],\n      imagedate: \"\",\n    };\n  }\n\n  componentDidMount() {\n    //const NASA_API_KEY = process.env.REACT_APP_NASA_API_KEY;\n    const latest = new Date();\n    latest.setDate(latest.getDate() - 2);\n    function pad(s) {\n      return s < 10 ? \"0\" + s : s;\n    }\n    let latest_string = [\n      latest.getFullYear(),\n      pad(latest.getMonth() + 1),\n      pad(latest.getDate()),\n    ].join(\"-\");\n\n    latest_string = \"2020-06-02\";\n\n    let image_dates = [\n      latest.getFullYear(),\n      pad(latest.getMonth() + 1),\n      pad(latest.getDate()),\n    ].join(\"/\");\n    console.log(image_dates[0]);\n    let images = [];\n    fetch(\n      `https://api.nasa.gov/EPIC/api/natural/date/${encodeURIComponent(\n        latest_string\n      )}?api_key=twk4KeZwwqGPWJFY9ksFShKEyoDGimDlJAjwDH0z`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        for (let d of data) {\n          //console.log(d)\n          images.push(d.image);\n        }\n      })\n      .then(() => {\n        let l_imgtags = images.map(\n          (i) =>\n            \"https://epic.gsfc.nasa.gov/archive/natural/\" +\n            image_dates +\n            \"/png/\" +\n            i +\n            \".png\"\n        );\n\n        return l_imgtags;\n      })\n      .then((l_imgtags) => {\n        this.setState({\n          imgtags: l_imgtags,\n          imagedate: image_dates,\n        });\n      })\n      .catch((error) => {\n        console.log(\"Request failed: \", error);\n      });\n  }\n  render() {\n    return (\n      <Router>\n        <div className=\"landing\">\n         \n          <div className=\"landing-container\">\n          \n            <div className=\"lgrid-item3\">\n            \n              <ul>\n                <li>\n                  <Link to=\"/\">Home</Link>\n                </li>\n                <li>\n                  <Link to=\"/SatInfo\">Satellite Information</Link>\n                </li>\n                <li>\n                  <Link to=\"/NEvents\">Natural Events</Link>\n                </li>\n              </ul>\n           \n              \n            </div>\n            \n            <div className=\"lgrid-item1\">\n              <Slider images={this.state.imgtags} />\n              <p>\n                [This image was taken by NASA's EPIC camera onboard the NOAA\n                DSCOVR on {this.state.imagedate}]\n              </p>\n            </div>\n            <div className=\"lgrid-item2\">\n              <h1>Satellite Tracker</h1>\n            </div>\n          </div>\n          \n        </div>\n        </Router>\n        \n    );\n  }\n}\n\nexport default Landing;\n"]},"metadata":{},"sourceType":"module"}