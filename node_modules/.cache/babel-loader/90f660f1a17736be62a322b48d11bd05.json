{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/my-app/src/components/BarChart.js\";\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      options: []\n    };\n  }\n\n  onFieldChange(event) {\n    var years = [];\n\n    if (this.props.DataSets.above) {\n      var satData = this.props.DataSets.above;\n\n      for (var i = 0; i < satData.length; i++) {\n        var date = satData[i].launchDate;\n        var dataObject = new Date(date);\n\n        if (dataObject.getFullYear()) {\n          years.push(dataObject.getFullYear());\n        }\n      }\n    }\n\n    yearlyData = years.reduce(function (object, satCount) {\n      if (!object[satCount]) {\n        object[satCount] = 1;\n      } else {\n        object[satCount]++;\n      }\n\n      return object;\n    }, {});\n    data = {\n      labels: Object.keys(yearlyData),\n      datasets: [{\n        label: \"Satellite Launch \",\n        backgroundColor: \"rgba(255, 215, 0,0.8)\",\n        borderColor: \"rgba(0 ,0 ,238,1)\",\n        borderWidth: 1,\n        hoverBackgroundColor: \"rgba(255, 215, 0,0.4)\",\n        hoverBorderColor: \"rgba(0 ,0 ,238,1)\",\n        barPercentage: 0.5,\n        barThickness: 20,\n        data: Object.values(yearlyData)\n      }]\n    };\n    options = {\n      legend: {\n        display: true,\n        labels: {\n          fontColor: \"#fff\"\n        }\n      },\n      scales: {\n        yAxes: [{\n          scaleLabel: {\n            padding: 20\n          },\n          ticks: {\n            autoSkip: false,\n            fontColor: \"#fff\",\n            fontSize: 14\n          }\n        }],\n        xAxes: [{\n          ticks: {\n            fontColor: \"#fff\",\n            fontSize: 14\n          }\n        }]\n      }\n    }; //console.log(yearlyData)\n\n    var ddValue = document.getElementById(\"dd\");\n    var yearRange = ddValue.value.split(\"-\");\n    var firstYear = yearRange[0];\n    var lastYear = yearRange[1];\n    console.log(firstYear + \" \" + lastYear); //var c = yearlyData;\n    //console.log(c)\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"barcharts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"Active Satellites\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"dropdown\",\n      onChange: this.onFieldChange.bind(this),\n      id: \"dd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, \"Select year range\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2010-2020\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, \"2010-2020\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2010-2020\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, \"2010-2020\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1990-2000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, \"1990-2000\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1980-1990\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, \"1980-1990\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1970-1980\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"1970-1980\")), /*#__PURE__*/React.createElement(Bar, {\n      data: data,\n      height: 20,\n      width: 80,\n      options: this.options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/my-app/src/components/BarChart.js"],"names":["React","Bar","BarChart","Component","constructor","props","state","data","options","onFieldChange","event","years","DataSets","above","satData","i","length","date","launchDate","dataObject","Date","getFullYear","push","yearlyData","reduce","object","satCount","labels","Object","keys","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","barPercentage","barThickness","values","legend","display","fontColor","scales","yAxes","scaleLabel","padding","ticks","autoSkip","fontSize","xAxes","ddValue","document","getElementById","yearRange","value","split","firstYear","lastYear","console","log","render","bind"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data : [],\n      options : []\n    };\n  }\n  onFieldChange(event) {\n    var years = [];\n    if (this.props.DataSets.above) {\n      var satData = this.props.DataSets.above;\n      for (var i = 0; i < satData.length; i++) {\n        var date = satData[i].launchDate;\n        var dataObject = new Date(date);\n        if (dataObject.getFullYear()) {\n          years.push(dataObject.getFullYear());\n        }\n      }\n    }\n    yearlyData = years.reduce(function (object, satCount) {\n      if (!object[satCount]) {\n        object[satCount] = 1;\n      } else {\n        object[satCount]++;\n      }\n      return object;\n    }, {});\n\n    data = {\n      labels: Object.keys(yearlyData),\n      datasets: [\n        {\n          label: \"Satellite Launch \",\n          backgroundColor: \"rgba(255, 215, 0,0.8)\",\n          borderColor: \"rgba(0 ,0 ,238,1)\",\n          borderWidth: 1,\n          hoverBackgroundColor: \"rgba(255, 215, 0,0.4)\",\n          hoverBorderColor: \"rgba(0 ,0 ,238,1)\",\n          barPercentage: 0.5,\n          barThickness: 20,\n          data: Object.values(yearlyData),\n        },\n      ],\n    };\n   options = {\n      legend: {\n        display: true,\n        labels: {\n          fontColor: \"#fff\",\n        },\n      },\n      scales: {\n        yAxes: [\n          {\n            scaleLabel: {\n              padding: 20,\n            },\n            ticks: {\n              autoSkip: false,\n              fontColor: \"#fff\",\n              fontSize: 14,\n            },\n          },\n        ],\n        xAxes: [\n          {\n            ticks: {\n              fontColor: \"#fff\",\n              fontSize: 14,\n            },\n          },\n        ],\n      },\n    };\n    //console.log(yearlyData)\n    var ddValue = document.getElementById(\"dd\");\n    var yearRange = ddValue.value.split(\"-\");\n    var firstYear = yearRange[0];\n    var lastYear = yearRange[1];\n    console.log(firstYear + \" \" + lastYear);\n    //var c = yearlyData;\n    //console.log(c)\n  }\n\n\n  render() {\n    return (\n      <div className=\"barcharts\">\n        <h1>Active Satellites</h1>\n        <select\n          className=\"dropdown\"\n          onChange={this.onFieldChange.bind(this)}\n          id=\"dd\"\n        >\n          <option value=\"\">Select year range</option>\n          <option value=\"2010-2020\">2010-2020</option>\n          <option value=\"2010-2020\">2010-2020</option>\n          <option value=\"1990-2000\">1990-2000</option>\n          <option value=\"1980-1990\">1980-1990</option>\n          <option value=\"1970-1980\">1970-1980</option>\n        </select>\n        <Bar data={data} height={20} width={80} options={this.options} />\n      </div>\n    );\n  }\n}\nexport default BarChart;\n\n"]},"metadata":{},"sourceType":"module"}