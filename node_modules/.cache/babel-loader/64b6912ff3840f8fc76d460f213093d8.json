{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/my-app/src/App.js\";\nimport React from \"react\";\nimport './style.css'; //import { render } from \"react-dom\";\n//import Header from \"./components/Header\"\n//import Main from \"./components/Main\"\n//import Footer  from \"./components/Footer\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nasa: [],\n      satellites: [],\n      isLoaded: false\n    };\n  }\n\n  fetchData(url, url1) {\n    Promise.all([fetch(url).then(response => response.json()), fetch(url1).then(response => response.json())]).then(data => {\n      return data; //data[0].collection.items[1].href;\n      //console.log(data);\n    }).then(data => {\n      this.setState({\n        nasa: data[0].collection.items[1].href,\n        satellites: data[1].results.name,\n        isLoaded: true\n      });\n    }); // .catch((error) = console.log(error));\n  }\n\n  componentDidMount() {\n    const url = 'https://images-api.nasa.gov/asset/ISS%204K%20Crew%20Earth%20Observations';\n    const url1 = 'https://swapi.dev/api/people/';\n    this.fetchData(url, url1);\n  }\n\n  render() {\n    const {\n      nasa,\n      satellites,\n      isLoaded\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"Satellite Tracker\"), !isLoaded && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 27\n      }\n    }, \"Loading...\"), /*#__PURE__*/React.createElement(\"video\", {\n      autoPlay: true,\n      controls: true,\n      muted: true,\n      loop: true,\n      src: nasa,\n      type: \"video/mp4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }), satellites, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"Satellite List\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/my-app/src/App.js"],"names":["React","App","Component","constructor","props","state","nasa","satellites","isLoaded","fetchData","url","url1","Promise","all","fetch","then","response","json","data","setState","collection","items","href","results","name","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP,C,CACA;AAEA;AACA;AACA;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAG,EADE;AAETC,MAAAA,UAAU,EAAG,EAFJ;AAGTC,MAAAA,QAAQ,EAAG;AAHF,KAAb;AAKH;;AAEDC,EAAAA,SAAS,CAACC,GAAD,EAAKC,IAAL,EAAU;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,CACRC,KAAK,CAACJ,GAAD,CAAL,CACCK,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,CADQ,EAGRH,KAAK,CAACH,IAAD,CAAL,CACCI,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,CAHQ,CAAZ,EAMCF,IAND,CAMOG,IAAD,IAAU;AACb,aAAOA,IAAP,CADa,CAEb;AACA;AAEF,KAXD,EAYCH,IAZD,CAYOG,IAAD,IAAU;AACZ,WAAKC,QAAL,CAAc;AACVb,QAAAA,IAAI,EAAGY,IAAI,CAAC,CAAD,CAAJ,CAAQE,UAAR,CAAmBC,KAAnB,CAAyB,CAAzB,EAA4BC,IADzB;AAEVf,QAAAA,UAAU,EAAGW,IAAI,CAAC,CAAD,CAAJ,CAAQK,OAAR,CAAgBC,IAFnB;AAGVhB,QAAAA,QAAQ,EAAE;AAHA,OAAd;AAKH,KAlBD,EADe,CAoBjB;AACD;;AACDiB,EAAAA,iBAAiB,GAAG;AACpB,UAAMf,GAAG,GAAG,0EAAZ;AACA,UAAMC,IAAI,GAAG,+BAAb;AACA,SAAKF,SAAL,CAAeC,GAAf,EAAmBC,IAAnB;AACH;;AACDe,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEpB,MAAAA,IAAF;AAAOC,MAAAA,UAAP;AAAkBC,MAAAA;AAAlB,QAA+B,KAAKH,KAA1C;AACA,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEK,CAACG,QAAD,iBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFlB,eAII;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,QAAQ,MAAxB;AAAyB,MAAA,KAAK,MAA9B;AAA+B,MAAA,IAAI,MAAnC;AACK,MAAA,GAAG,EAAIF,IADZ;AACkB,MAAA,IAAI,EAAG,WADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAMKC,UANL,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ,CADJ;AAcH;;AArDiC;;AAwDlC,eAAeN,GAAf","sourcesContent":["import React from \"react\";\nimport './style.css';\n//import { render } from \"react-dom\";\n\n//import Header from \"./components/Header\"\n//import Main from \"./components/Main\"\n//import Footer  from \"./components/Footer\"\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            nasa : [],\n            satellites : [],\n            isLoaded : false,\n        };\n    }\n\n    fetchData(url,url1){\n        Promise.all([\n            fetch(url)\n            .then((response) => response.json()),\n            fetch(url1)\n            .then((response) => response.json())  \n        ])       \n        .then((data) => {\n           return data;\n           //data[0].collection.items[1].href;\n           //console.log(data);\n            \n        })\n        .then((data) => {\n            this.setState({\n                nasa : data[0].collection.items[1].href,\n                satellites : data[1].results.name,\n                isLoaded: true,\n            });\n        })\n      // .catch((error) = console.log(error));\n    }\n    componentDidMount() {\n    const url = 'https://images-api.nasa.gov/asset/ISS%204K%20Crew%20Earth%20Observations';\n    const url1 = 'https://swapi.dev/api/people/';\n    this.fetchData(url,url1);\n} \nrender() {\n    const { nasa,satellites,isLoaded } = this.state;\n    return (\n        <React.Fragment>\n            <h1>Satellite Tracker</h1>\n            {!isLoaded && <p>Loading...</p>}\n\n            <video autoPlay controls muted loop\n                 src = {nasa} type = \"video/mp4\" /> \n            {satellites}\n            <h3>Satellite List</h3> \n                                     \n             </React.Fragment> \n              \n                \n      )\n}\n\n}\nexport default App"]},"metadata":{},"sourceType":"module"}