{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/my-app/src/components/BarData.js\";\nimport React from \"react\";\nimport BarChart from \"./BarChart\";\n\nclass BarData extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      year: {},\n      yearlyData: {}\n    };\n    console.log(\"CONS\");\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    let title = e.target.value;\n    console.log(title);\n    let yearRange = e.target.value.split(\"-\");\n    let firstYear = yearRange[0];\n    let lastYear = yearRange[1];\n    let years = [];\n    let data = this.props.DataSets;\n\n    if (data) {\n      for (var i = 0; i < data.length; i++) {\n        var date = data[i].launchDate;\n        var dataObject = new Date(date);\n        var fullYear = dataObject.getFullYear();\n\n        if (fullYear >= parseInt(firstYear) && fullYear <= parseInt(lastYear)) {\n          years.push(dataObject.getFullYear());\n        }\n      }\n    }\n\n    let tmpYearlyData = years.reduce(function (object, satCount) {\n      if (!object[satCount]) {\n        object[satCount] = 1;\n      } else {\n        object[satCount]++;\n      }\n\n      return object;\n    }, {}); //let year = Object.keys(tmpData)\n\n    this.setState({\n      yearlyData: tmpYearlyData,\n      year: Object.keys(tmpYearlyData)\n    });\n  }\n\n  render() {\n    //let data = this.state.yearlyData;\n    const {\n      year,\n      yearlyData\n    } = this.state;\n    console.log(year);\n    console.log(yearlyData);\n    var data = [\"2010-2020\", \"2000-2010\", \"1990-2000\", \"1980-1990\", \"1970-1980\", \"1960-1970\", \"1950-1960\"];\n    let selectops = data.map((tempData, i) => tempData == \"2010-2020\" ? /*#__PURE__*/React.createElement(\"option\", {\n      key: tempData,\n      value: tempData,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, tempData) : /*#__PURE__*/React.createElement(\"option\", {\n      key: tempData,\n      value: tempData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, tempData));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      name: \"Select year\",\n      className: \"year_select\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, selectops)), /*#__PURE__*/React.createElement(BarChart, {\n      satdata: this.state.yearlyData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default BarData;","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/my-app/src/components/BarData.js"],"names":["React","BarChart","BarData","Component","constructor","state","year","yearlyData","console","log","handleChange","bind","e","title","target","value","yearRange","split","firstYear","lastYear","years","data","props","DataSets","i","length","date","launchDate","dataObject","Date","fullYear","getFullYear","parseInt","push","tmpYearlyData","reduce","object","satCount","setState","Object","keys","render","selectops","map","tempData"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport BarChart from \"./BarChart\";\n\nclass BarData extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      year: {},\n      yearlyData: {},\n    };\n    console.log(\"CONS\");\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(e) {\n    let title = e.target.value;\n    console.log(title);\n    let yearRange = e.target.value.split(\"-\");\n    let firstYear = yearRange[0];\n    let lastYear = yearRange[1];\n    let years = [];\n    let data = this.props.DataSets;\n    if (data) {\n      for (var i = 0; i < data.length; i++) {\n        var date = data[i].launchDate;\n        var dataObject = new Date(date);\n        var fullYear = dataObject.getFullYear();\n        if (fullYear >= parseInt(firstYear) && fullYear <= parseInt(lastYear)) {\n          years.push(dataObject.getFullYear());\n        }\n      }\n    }\n    let tmpYearlyData = years.reduce(function (object, satCount) {\n      if (!object[satCount]) {\n        object[satCount] = 1;\n      } else {\n        object[satCount]++;\n      }\n      return object;\n    }, {});\n\n    //let year = Object.keys(tmpData)\n    this.setState({\n      yearlyData: tmpYearlyData,\n      year: Object.keys(tmpYearlyData),\n    });\n  }\n\n  render() {\n    //let data = this.state.yearlyData;\n    const {year, yearlyData} = this.state;\n    console.log(year);\n    console.log(yearlyData);\n    var data = [\"2010-2020\", \"2000-2010\", \"1990-2000\", \"1980-1990\", \"1970-1980\", \"1960-1970\", \"1950-1960\"];\n    let selectops = data.map((tempData, i) => (\n      tempData == \"2010-2020\" ?\n      <option key={tempData} value={tempData} selected>\n        {tempData}\n      </option>\n      :\n      <option key={tempData} value={tempData}>\n      {tempData}\n      </option>\n    ));\n\n    return (\n      <div>\n        <div>\n          <select\n            name=\"Select year\"\n            className=\"year_select\"\n            onChange={this.handleChange}>\n            {selectops}\n          </select>\n        </div>\n        <BarChart satdata={this.state.yearlyData} />\n      </div>\n    );\n  }\n}\nexport default BarData;\n"]},"metadata":{},"sourceType":"module"}