{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/my-app/src/components/BarChart.js\";\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nclass BarChart extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      years: [],\n      stateOptions: [],\n      stateYearlyData: []\n    };\n  }\n\n  componentWillMount() {\n    if (this.props.DataSets.above) {\n      var satData = this.props.DataSets.above;\n\n      for (var i = 0; i < satData.length; i++) {\n        var date = satData[i].launchDate;\n        var dataObject = new Date(date);\n\n        if (dataObject.getFullYear()) {\n          this.state.years.push(dataObject.getFullYear());\n        }\n      }\n    }\n\n    const yearlyData = this.state.years.reduce(function (object, satCount) {\n      if (!object[satCount]) {\n        object[satCount] = 1;\n      } else {\n        object[satCount]++;\n      }\n\n      return object;\n    }, {});\n    const data = {\n      labels: Object.keys(yearlyData),\n      datasets: [{\n        label: \"Satellite Launch \",\n        backgroundColor: \"rgba(255, 215, 0,0.8)\",\n        borderColor: \"rgba(0 ,0 ,238,1)\",\n        borderWidth: 1,\n        hoverBackgroundColor: \"rgba(255, 215, 0,0.4)\",\n        hoverBorderColor: \"rgba(0 ,0 ,238,1)\",\n        barPercentage: 0.5,\n        barThickness: 20,\n        data: Object.values(yearlyData)\n      }]\n    };\n    const options = {\n      legend: {\n        display: true,\n        labels: {\n          fontColor: \"#fff\"\n        }\n      },\n      scales: {\n        yAxes: [{\n          scaleLabel: {\n            padding: 20\n          },\n          ticks: {\n            autoSkip: false,\n            fontColor: \"#fff\",\n            fontSize: 14\n          }\n        }],\n        xAxes: [{\n          ticks: {\n            fontColor: \"#fff\",\n            fontSize: 14\n          }\n        }]\n      }\n    };\n    this.state.stateData = data;\n    this.state.stateOptions = options;\n    this.state.stateYearlyData = yearlyData;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"barcharts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, \"Active Satellites\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"dropdown\",\n      onChange: this.onFieldChange.bind(this),\n      id: \"dd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \"Select year range\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2010-2020\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, \"2010-2020\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1990-2000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \"1990-2000\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1980-1990\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"1980-1990\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1970-1980\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, \"1970-1980\")), /*#__PURE__*/React.createElement(Bar, {\n      data: this.state.stateData,\n      height: 20,\n      width: 80,\n      options: this.state.stateOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  onFieldChange(event) {\n    //console.log(yearlyData)\n    var ddValue = document.getElementById(\"dd\");\n    var yearRange = ddValue.value.split(\"-\");\n    var firstYear = yearRange[0];\n    var lastYear = yearRange[1];\n    console.log(firstYear + \" \" + lastYear);\n    var c = this.state.stateYearlyData;\n    var filteredData = []; //for(var i = 0; i < c.length; i++){\n    //  if(c[i] >= parseInt(firstYear) && c[i] <= parseInt(lastYear)){\n    //  filteredData.push(c[i])\n    //}\n    //}\n\n    filteredData = {\n      1958: 1,\n      1960: 10\n    };\n    console.log(filteredData);\n    this.state.stateData = filteredData;\n  }\n\n}\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/my-app/src/components/BarChart.js"],"names":["React","Bar","BarChart","Component","state","years","stateOptions","stateYearlyData","componentWillMount","props","DataSets","above","satData","i","length","date","launchDate","dataObject","Date","getFullYear","push","yearlyData","reduce","object","satCount","data","labels","Object","keys","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","barPercentage","barThickness","values","options","legend","display","fontColor","scales","yAxes","scaleLabel","padding","ticks","autoSkip","fontSize","xAxes","stateData","render","onFieldChange","bind","event","ddValue","document","getElementById","yearRange","value","split","firstYear","lastYear","console","log","c","filteredData"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nclass BarChart extends React.Component {\n  state = {\n    years: [],\n    stateOptions: [],\n    stateYearlyData: []\n  }\ncomponentWillMount(){\n  if (this.props.DataSets.above) {\n    var satData = this.props.DataSets.above;\n    for (var i = 0; i < satData.length; i++) {\n      var date = satData[i].launchDate;\n      var dataObject = new Date(date);\n      if (dataObject.getFullYear()) {\n         this.state.years.push(dataObject.getFullYear());        \n      }\n    }\n  }\n  const yearlyData = this.state.years.reduce(function (object, satCount) {\n    if (!object[satCount]) {\n      object[satCount] = 1;\n    } else {\n      object[satCount]++;\n    }\n    return object;\n  }, {});\n\n  const data = {\n    labels: Object.keys(yearlyData),\n    datasets: [\n      {\n        label: \"Satellite Launch \",\n        backgroundColor: \"rgba(255, 215, 0,0.8)\",\n        borderColor: \"rgba(0 ,0 ,238,1)\",\n        borderWidth: 1,\n        hoverBackgroundColor: \"rgba(255, 215, 0,0.4)\",\n        hoverBorderColor: \"rgba(0 ,0 ,238,1)\",\n        barPercentage: 0.5,\n        barThickness: 20,\n        data: Object.values(yearlyData),\n      },\n    ],\n  };\n const options = {\n    legend: {\n      display: true,\n      labels: {\n        fontColor: \"#fff\",\n      },\n    },\n    scales: {\n      yAxes: [\n        {\n          scaleLabel: {\n            padding: 20,\n          },\n          ticks: {\n            autoSkip: false,\n            fontColor: \"#fff\",\n            fontSize: 14,\n          },\n        },\n      ],\n      xAxes: [\n        {\n          ticks: {\n            fontColor: \"#fff\",\n            fontSize: 14,\n          },\n        },\n      ],\n    },\n  };\n  this.state.stateData = data;\n  this.state.stateOptions = options;\n  this.state.stateYearlyData = yearlyData;\n}\n  render() {\n  \n\n    return (\n      <div className=\"barcharts\">\n        <h1>Active Satellites</h1>\n        <select\n          className=\"dropdown\"\n          onChange={this.onFieldChange.bind(this)}\n          id=\"dd\"\n        >\n          <option value=\"\">Select year range</option>\n          <option value=\"2010-2020\">2010-2020</option>\n          <option value=\"1990-2000\">1990-2000</option>\n          <option value=\"1980-1990\">1980-1990</option>\n          <option value=\"1970-1980\">1970-1980</option>\n        </select>\n        <Bar data={this.state.stateData} height={20} width={80} options={this.state.stateOptions} />\n      </div>\n    );\n  }\n\n  onFieldChange(event) {\n    //console.log(yearlyData)\n    var ddValue = document.getElementById(\"dd\");\n    var yearRange = ddValue.value.split(\"-\");\n    var firstYear = yearRange[0];\n    var lastYear = yearRange[1];\n    console.log(firstYear + \" \" + lastYear);\n    var c = this.state.stateYearlyData;\n    var filteredData = [];\n    //for(var i = 0; i < c.length; i++){\n      //  if(c[i] >= parseInt(firstYear) && c[i] <= parseInt(lastYear)){\n        //  filteredData.push(c[i])\n        //}\n    //}\n    filteredData = {1958: 1, 1960: 10}\n    console.log(filteredData)\n    this.state.stateData = filteredData\n  }\n}\nexport default BarChart;\n\n"]},"metadata":{},"sourceType":"module"}