{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/src/components/nevents/NEtop.js\";\nimport React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nclass NEtop extends React.Component {\n  render() {\n    let event = this.props.event;\n    let total = this.props.total;\n    const state = {\n      labels: [event[0], \"others\"],\n      datasets: [{\n        backgroundColor: [\"#01D4B4\", \"#112a4f\"],\n        hoverBackgroundColor: [\"#027564\"],\n        hoverBorderColor: [\"#027564\"],\n        hoverBorderWidth: 0,\n        borderWidth: 0,\n        barPercentage: 0.5,\n        categoryPercentage: 1,\n        data: [event[1], total - event[1]]\n      }]\n    };\n    const options = {\n      cutoutPercentage: 80,\n      maintainAspectRatio: false,\n      title: {\n        display: false,\n        text: \"Events around the globe\",\n        position: \"bottom\"\n      },\n      legend: {\n        display: false // position: \"right\",\n\n      }\n    }; // Plugin for text in the middle : https://jsfiddle.net/cmyker/ooxdL2vj/\n    // https://www.chartjs.org/docs/latest/developers/plugins.html\n\n    const plugin = [{\n      beforeDraw: function (chart) {\n        var width = chart.chart.width,\n            height = chart.chart.height,\n            ctx = chart.chart.ctx;\n        ctx.restore();\n        var fontSize = (height / 50).toFixed(2);\n        ctx.font = fontSize + \"em sans-serif\";\n        ctx.textBaseline = \"middle\";\n        ctx.fillStyle = \"#FF9C00\";\n        var text = event[1].toString(),\n            textX = Math.round((width - ctx.measureText(text).width) / 2),\n            textY = height / 2;\n        ctx.fillText(text, textX, textY);\n        ctx.save();\n      }\n    }];\n    return /*#__PURE__*/React.createElement(Doughnut, {\n      data: state,\n      options: options,\n      plugins: plugin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nexport default NEtop;","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/src/components/nevents/NEtop.js"],"names":["React","Doughnut","NEtop","Component","render","event","props","total","state","labels","datasets","backgroundColor","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","borderWidth","barPercentage","categoryPercentage","data","options","cutoutPercentage","maintainAspectRatio","title","display","text","position","legend","plugin","beforeDraw","chart","width","height","ctx","restore","fontSize","toFixed","font","textBaseline","fillStyle","toString","textX","Math","round","measureText","textY","fillText","save"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAClCC,EAAAA,MAAM,GAAG;AACP,QAAIC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAvB;AACA,QAAIE,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAvB;AAEA,UAAMC,KAAK,GAAG;AACZC,MAAAA,MAAM,EAAE,CAACJ,KAAK,CAAC,CAAD,CAAN,EAAW,QAAX,CADI;AAEZK,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,eAAe,EAAE,CAAC,SAAD,EAAY,SAAZ,CADnB;AAEEC,QAAAA,oBAAoB,EAAE,CAAC,SAAD,CAFxB;AAGEC,QAAAA,gBAAgB,EAAE,CAAC,SAAD,CAHpB;AAIEC,QAAAA,gBAAgB,EAAE,CAJpB;AAKEC,QAAAA,WAAW,EAAE,CALf;AAMEC,QAAAA,aAAa,EAAE,GANjB;AAOEC,QAAAA,kBAAkB,EAAE,CAPtB;AAQEC,QAAAA,IAAI,EAAE,CAACb,KAAK,CAAC,CAAD,CAAN,EAAWE,KAAK,GAAGF,KAAK,CAAC,CAAD,CAAxB;AARR,OADQ;AAFE,KAAd;AAgBA,UAAMc,OAAO,GAAG;AACdC,MAAAA,gBAAgB,EAAE,EADJ;AAEdC,MAAAA,mBAAmB,EAAE,KAFP;AAGdC,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,IAAI,EAAE,yBAFD;AAGLC,QAAAA,QAAQ,EAAE;AAHL,OAHO;AAQdC,MAAAA,MAAM,EAAE;AACNH,QAAAA,OAAO,EAAE,KADH,CAEN;;AAFM;AARM,KAAhB,CApBO,CAkCP;AACA;;AACA,UAAMI,MAAM,GAAG,CACb;AACEC,MAAAA,UAAU,EAAE,UAAUC,KAAV,EAAiB;AAC3B,YAAIC,KAAK,GAAGD,KAAK,CAACA,KAAN,CAAYC,KAAxB;AAAA,YACEC,MAAM,GAAGF,KAAK,CAACA,KAAN,CAAYE,MADvB;AAAA,YAEEC,GAAG,GAAGH,KAAK,CAACA,KAAN,CAAYG,GAFpB;AAIAA,QAAAA,GAAG,CAACC,OAAJ;AACA,YAAIC,QAAQ,GAAG,CAACH,MAAM,GAAG,EAAV,EAAcI,OAAd,CAAsB,CAAtB,CAAf;AACAH,QAAAA,GAAG,CAACI,IAAJ,GAAWF,QAAQ,GAAG,eAAtB;AACAF,QAAAA,GAAG,CAACK,YAAJ,GAAmB,QAAnB;AACAL,QAAAA,GAAG,CAACM,SAAJ,GAAgB,SAAhB;AAEA,YAAId,IAAI,GAAGnB,KAAK,CAAC,CAAD,CAAL,CAASkC,QAAT,EAAX;AAAA,YACEC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACZ,KAAK,GAAGE,GAAG,CAACW,WAAJ,CAAgBnB,IAAhB,EAAsBM,KAA/B,IAAwC,CAAnD,CADV;AAAA,YAEEc,KAAK,GAAGb,MAAM,GAAG,CAFnB;AAIAC,QAAAA,GAAG,CAACa,QAAJ,CAAarB,IAAb,EAAmBgB,KAAnB,EAA0BI,KAA1B;AACAZ,QAAAA,GAAG,CAACc,IAAJ;AACD;AAlBH,KADa,CAAf;AAuBA,wBAAO,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEtC,KAAhB;AAAuB,MAAA,OAAO,EAAEW,OAAhC;AAAyC,MAAA,OAAO,EAAEQ,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AA7DiC;;AA+DpC,eAAezB,KAAf","sourcesContent":["import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nclass NEtop extends React.Component {\n  render() {\n    let event = this.props.event;\n    let total = this.props.total;\n\n    const state = {\n      labels: [event[0], \"others\"],\n      datasets: [\n        {\n          backgroundColor: [\"#01D4B4\", \"#112a4f\"],\n          hoverBackgroundColor: [\"#027564\"],\n          hoverBorderColor: [\"#027564\"],\n          hoverBorderWidth: 0,\n          borderWidth: 0,\n          barPercentage: 0.5,\n          categoryPercentage: 1,\n          data: [event[1], total - event[1]],\n        },\n      ],\n    };\n\n    const options = {\n      cutoutPercentage: 80,\n      maintainAspectRatio: false,\n      title: {\n        display: false,\n        text: \"Events around the globe\",\n        position: \"bottom\",\n      },\n      legend: {\n        display: false,\n        // position: \"right\",\n      },\n    };\n\n    // Plugin for text in the middle : https://jsfiddle.net/cmyker/ooxdL2vj/\n    // https://www.chartjs.org/docs/latest/developers/plugins.html\n    const plugin = [\n      {\n        beforeDraw: function (chart) {\n          var width = chart.chart.width,\n            height = chart.chart.height,\n            ctx = chart.chart.ctx;\n\n          ctx.restore();\n          var fontSize = (height / 50).toFixed(2);\n          ctx.font = fontSize + \"em sans-serif\";\n          ctx.textBaseline = \"middle\";\n          ctx.fillStyle = \"#FF9C00\";\n\n          var text = event[1].toString(),\n            textX = Math.round((width - ctx.measureText(text).width) / 2),\n            textY = height / 2;\n\n          ctx.fillText(text, textX, textY);\n          ctx.save();\n        },\n      },\n    ];\n\n    return <Doughnut data={state} options={options} plugins={plugin} />;\n  }\n}\nexport default NEtop;\n"]},"metadata":{},"sourceType":"module"}