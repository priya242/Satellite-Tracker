{"ast":null,"code":"var _jsxFileName = \"/Users/priyankapandey/Satellite-Tracker/my-app/src/components/BarChart.js\";\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nexport default function BarChart(props) {\n  var years = [];\n  var satData = props.DataSet2.above;\n\n  if (satData) {\n    for (var i = 0; i < satData.length; i++) {\n      var date = satData[i].launchDate;\n      var dataObject = new Date(date);\n\n      if (dataObject.getFullYear() > 2010) {\n        years.push(dataObject.getFullYear());\n      }\n    }\n  }\n\n  var yearlyData = years.reduce(function (object, satCount) {\n    if (!object[satCount]) {\n      object[satCount] = 1;\n    } else {\n      object[satCount]++;\n    }\n\n    return object;\n  }, {});\n  Object.entries(yearlyData).forEach(([key, value]) => console.log(`${key}: ${value}`));\n  const data = {\n    labels: Object.keys(yearlyData),\n    datasets: [{\n      label: \"Satellite Launch \",\n      type: 'line',\n      data: Object.values(yearlyData),\n      fill: false,\n      backgroundColor: \"rgba(255, 215, 0,0.8)\",\n      borderColor: \"rgba(0 ,0 ,238,1)\",\n      pointBorderColor: '#ffffff',\n      pointBackgroundColor: '#ffffff',\n      pointHoverBackgroundColor: \"rgba(255, 215, 0,0.4)\",\n      pointHoverBorderColor: \"rgba(0 ,0 ,238,1)\",\n      yAxisID: 'y-axis-2'\n    }, {\n      type: 'bar',\n      data: Object.values(yearlyData),\n      fill: false,\n      backgroundColor: \"rgba(255, 215, 0,0.8)\",\n      borderColor: \"rgba(0 ,0 ,238,1)\",\n      borderWidth: 1,\n      hoverBackgroundColor: \"rgba(255, 215, 0,0.4)\",\n      hoverBorderColor: \"rgba(0 ,0 ,238,1)\",\n      barPercentage: 0.5,\n      barThickness: 20,\n      yAxisID: 'y-axis-1'\n    }]\n  };\n  const options = {\n    responsive: true,\n    tooltips: {\n      mode: 'label'\n    },\n    elements: {\n      line: {\n        fill: false\n      }\n    },\n    legend: {\n      labels: {\n        fontColor: \"#fff\"\n      }\n    },\n    scales: {\n      xAxes: [{\n        display: true,\n        gridlines: {\n          display: false\n        },\n        labels: {\n          show: true\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"barcharts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, \"Active Satellites\"), /*#__PURE__*/React.createElement(Bar, {\n    height: 180,\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/priyankapandey/Satellite-Tracker/my-app/src/components/BarChart.js"],"names":["React","Bar","BarChart","props","years","satData","DataSet2","above","i","length","date","launchDate","dataObject","Date","getFullYear","push","yearlyData","reduce","object","satCount","Object","entries","forEach","key","value","console","log","data","labels","keys","datasets","label","type","values","fill","backgroundColor","borderColor","pointBorderColor","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","yAxisID","borderWidth","hoverBackgroundColor","hoverBorderColor","barPercentage","barThickness","options","responsive","tooltips","mode","elements","line","legend","fontColor","scales","xAxes","display","gridlines","show"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,OAAO,GAAGF,KAAK,CAACG,QAAN,CAAeC,KAA7B;;AACA,MAAIF,OAAJ,EAAa;AACX,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAAO,CAACI,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,UAAIE,IAAI,GAAGL,OAAO,CAACG,CAAD,CAAP,CAAWG,UAAtB;AACA,UAAIC,UAAU,GAAG,IAAIC,IAAJ,CAASH,IAAT,CAAjB;;AACA,UAAIE,UAAU,CAACE,WAAX,KAA2B,IAA/B,EAAqC;AACnCV,QAAAA,KAAK,CAACW,IAAN,CAAWH,UAAU,CAACE,WAAX,EAAX;AACD;AACF;AACF;;AACD,MAAIE,UAAU,GAAGZ,KAAK,CAACa,MAAN,CAAa,UAAUC,MAAV,EAAkBC,QAAlB,EAA4B;AACxD,QAAI,CAACD,MAAM,CAACC,QAAD,CAAX,EAAuB;AACrBD,MAAAA,MAAM,CAACC,QAAD,CAAN,GAAmB,CAAnB;AACD,KAFD,MAEO;AACLD,MAAAA,MAAM,CAACC,QAAD,CAAN;AACD;;AACD,WAAOD,MAAP;AACD,GAPgB,EAOd,EAPc,CAAjB;AAQAE,EAAAA,MAAM,CAACC,OAAP,CAAeL,UAAf,EAA2BM,OAA3B,CAAmC,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KACjCC,OAAO,CAACC,GAAR,CAAa,GAAEH,GAAI,KAAIC,KAAM,EAA7B,CADF;AAIA,QAAMG,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAER,MAAM,CAACS,IAAP,CAAYb,UAAZ,CADG;AAEXc,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,mBADT;AAEEC,MAAAA,IAAI,EAAG,MAFT;AAGEL,MAAAA,IAAI,EAAEP,MAAM,CAACa,MAAP,CAAcjB,UAAd,CAHR;AAIEkB,MAAAA,IAAI,EAAG,KAJT;AAKEC,MAAAA,eAAe,EAAE,uBALnB;AAMEC,MAAAA,WAAW,EAAE,mBANf;AAOEC,MAAAA,gBAAgB,EAAE,SAPpB;AAQEC,MAAAA,oBAAoB,EAAE,SARxB;AASEC,MAAAA,yBAAyB,EAAE,uBAT7B;AAUEC,MAAAA,qBAAqB,EAAE,mBAVzB;AAYEC,MAAAA,OAAO,EAAE;AAZX,KADQ,EAcN;AACAT,MAAAA,IAAI,EAAC,KADL;AAEAL,MAAAA,IAAI,EAAEP,MAAM,CAACa,MAAP,CAAcjB,UAAd,CAFN;AAGAkB,MAAAA,IAAI,EAAE,KAHN;AAIAC,MAAAA,eAAe,EAAE,uBAJjB;AAKAC,MAAAA,WAAW,EAAE,mBALb;AAMAM,MAAAA,WAAW,EAAE,CANb;AAOAC,MAAAA,oBAAoB,EAAE,uBAPtB;AAQAC,MAAAA,gBAAgB,EAAE,mBARlB;AASAC,MAAAA,aAAa,EAAE,GATf;AAUAC,MAAAA,YAAY,EAAE,EAVd;AAWAL,MAAAA,OAAO,EAAE;AAXT,KAdM;AAFC,GAAb;AA8BA,QAAMM,OAAO,GAAE;AACbC,IAAAA,UAAU,EAAC,IADE;AAEbC,IAAAA,QAAQ,EAAC;AACPC,MAAAA,IAAI,EAAC;AADE,KAFI;AAKbC,IAAAA,QAAQ,EAAC;AACPC,MAAAA,IAAI,EAAC;AACHlB,QAAAA,IAAI,EAAC;AADF;AADE,KALI;AAUbmB,IAAAA,MAAM,EAAC;AACLzB,MAAAA,MAAM,EAAE;AACN0B,QAAAA,SAAS,EAAE;AADL;AADH,KAVM;AAebC,IAAAA,MAAM,EAAC;AACLC,MAAAA,KAAK,EAAC,CACJ;AACEC,QAAAA,OAAO,EAAC,IADV;AAEEC,QAAAA,SAAS,EAAC;AACRD,UAAAA,OAAO,EAAC;AADA,SAFZ;AAKE7B,QAAAA,MAAM,EAAE;AACP+B,UAAAA,IAAI,EAAG;AADA;AALV,OADI;AADD;AAfM,GAAf;AA2BA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE,oBAAC,GAAD;AACE,IAAA,MAAM,EAAE,GADV;AAEE,IAAA,IAAI,EAAEhC,IAFR;AAGE,IAAA,OAAO,EAAEoB,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAUD","sourcesContent":["import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nexport default function BarChart(props) {\n  var years = [];\n  var satData = props.DataSet2.above;\n  if (satData) {\n    for (var i = 0; i < satData.length; i++) {\n      var date = satData[i].launchDate;\n      var dataObject = new Date(date);\n      if (dataObject.getFullYear() > 2010) {\n        years.push(dataObject.getFullYear());\n      }\n    }\n  }\n  var yearlyData = years.reduce(function (object, satCount) {\n    if (!object[satCount]) {\n      object[satCount] = 1;\n    } else {\n      object[satCount]++;\n    }\n    return object;\n  }, {});\n  Object.entries(yearlyData).forEach(([key, value]) =>\n    console.log(`${key}: ${value}`)\n  );\n\n  const data = {\n    labels: Object.keys(yearlyData),\n    datasets: [\n      {\n        label: \"Satellite Launch \",\n        type : 'line',\n        data: Object.values(yearlyData),\n        fill : false,\n        backgroundColor: \"rgba(255, 215, 0,0.8)\",\n        borderColor: \"rgba(0 ,0 ,238,1)\",\n        pointBorderColor: '#ffffff',\n        pointBackgroundColor: '#ffffff',\n        pointHoverBackgroundColor: \"rgba(255, 215, 0,0.4)\",\n        pointHoverBorderColor: \"rgba(0 ,0 ,238,1)\",\n        \n        yAxisID: 'y-axis-2'\n      },{\n        type:'bar',\n        data: Object.values(yearlyData),\n        fill: false,\n        backgroundColor: \"rgba(255, 215, 0,0.8)\",\n        borderColor: \"rgba(0 ,0 ,238,1)\",\n        borderWidth: 1,\n        hoverBackgroundColor: \"rgba(255, 215, 0,0.4)\",\n        hoverBorderColor: \"rgba(0 ,0 ,238,1)\",\n        barPercentage: 0.5,\n        barThickness: 20,\n        yAxisID: 'y-axis-1'\n      }],\n  };\n  const options ={\n    responsive:true,\n    tooltips:{\n      mode:'label'\n    },\n    elements:{\n      line:{\n        fill:false\n      }\n    },\n    legend:{\n      labels: {\n        fontColor: \"#fff\",\n      },\n    },\n    scales:{\n      xAxes:[\n        {\n          display:true,\n          gridlines:{\n            display:false\n          },\n          labels :{\n           show : true\n          }\n        }]}\n  };\n  return (\n    <div className=\"barcharts\">\n      <h1>Active Satellites</h1>\n      <Bar\n        height={180}\n        data={data}\n        options={options}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}